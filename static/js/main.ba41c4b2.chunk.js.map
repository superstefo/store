{"version":3,"sources":["parts/TinyParts.js","services/AjaxService.js","admin/Authenticate.js","services/DataAccessService.js","services/RouteHistoryProvider.js","services/MathUtils.js","customer/Basket.js","admin/EditItem.js","admin/EditItemsList.js","parts/ErrorPage.js","customer/Faq.js","admin/GetOrders.js","Home.js","customer/ItemsList.js","admin/ReviewOrder.js","admin/SelectOrders.js","customer/OrderDetails.js","customer/OrderResult.js","parts/TopHeader.js","App.js","serviceWorker.js","index.js","services/Constants.js"],"names":["TextWrapper","args","className","title","NavLinkButton","props","exact","activeClassName","to","type","label","OrderWrapper","orderedItem","wholeOrder","onChangeFunc","initialValue","onChange","ev","value","min","SetStateInput","stateFieldName","statefulObject","disabled","max","state","event","key","setState","target","setTheState","AjaxService","execute","method","url","data","isToEscape","headers","Const","AUTH_HEADER_NAME","JSON","stringify","replace","axios","doPost","isToescape","doPut","doGet","doDelete","setSecret","secret","wakeServer","URLS","WAKE_SERVER","React","Component","Authenticate","handleSubmit","encodedString","Buffer","from","name","pass","toString","AUTH","then","DataAccessService","setIsAdmin","History","goTo","catch","e","this","onClick","DataKeeperService","getCurrentOrder","currentOrder","getOrdersForDate","date","allOrders","setOrdersForDate","orders","getSelectedDateForOrders","selectedDateForOrders","setSelectedDateForOrders","clearCurrentOrder","isPristine","isSitePristine","setPristine","getPriceListObj","arr","getPriceList","obj","forEach","one","id","priceList","length","ITEMS","setPriceList","items","getIsAdmin","isAdmin","RouteHistoryProviderCl","history","historyHolder","importHistory","console","error","RouteHistoryProvider","withRouter","historyObj","push","pathname","zeros","flToInt","floatVal1","precision","str","split","decimalNum","substring","zeroFill","parseInt","intToFl","intV","decimalPart","wholePart","parseFloat","Basket","text","beanId","allFr","allItems","Object","keys","filter","quantity","map","prepareCalculationPricelist","columns","Header","accessor","width","sortable","defaultPageSize","pageSize","showPagination","totalPrice","currentSum","price","info","total","EditItems","stateToObj","getId","Date","getTime","reverse","join","findIndex","item","change","isDisabled","editedObj","saveToBackend","cancel","delete","window","confirm","array","newArray","newArrayIndex","index","element","location","Buttons","submitF","EditItemsList","newOrder","orderWrapperProps","submit","goToFaqView","prepareViewData","oneItem","buttons","ErrorPage","ok","err","Faq","getData","question","answer","VERSION","GetOrders","getOrders","month","day","startsWith","ORDERS","Home","isHidden","isButtonDisabled","role","ItemsList","order","ReviewOrder","makeStateObject","priceMap","ordersArr","orderItem","priceListItem","warning","address","email","more","hour","toLocaleString","phone","orderedItems","undefined","newState","prev","next","SelectOrders","selectedDate","objToArr","arrKeys","newObj","ind","count","OrderDetails","st","ORDER","alert","OrderResult","result","TopHeader","App","style","paddingTop","HistoryHolder","path","component","EditItem","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","ipAdress","BASE_URL"],"mappings":"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","file":"static/js/main.ba41c4b2.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const TextWrapper = (args) => {\r\n  return (\r\n    <div className=\"text-left text-wrap\">\r\n      <label>{args.title}</label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const NavLinkButton = (props) => (\r\n  <div>\r\n    <NavLink exact activeClassName=\"active\" to={props.to}>\r\n      <button type=\"button\" className=\"btn btn-primary\">\r\n        {props.label}\r\n      </button>\r\n    </NavLink>\r\n  </div>\r\n)\r\n\r\nexport const OrderWrapper = (args) => {\r\n  let { orderedItem, wholeOrder, onChangeFunc, initialValue } = args\r\n  return (\r\n    <div className=\"text-center text-wrap\">\r\n      <input className=\"form-control\" onChange={(ev) => onChangeFunc(ev, orderedItem, wholeOrder)} value={initialValue} type=\"number\" min=\"0\"></input>\r\n    </div>\r\n  )\r\n}\r\n\r\n//changed field is 'state', which is part of the argument object 'statefulObject'\r\nexport const SetStateInput = (args) => {\r\n  let { stateFieldName, statefulObject, label, type, disabled, min, max } = args;\r\n\r\n  let initialValue = statefulObject.state[stateFieldName] || \"\";\r\n  if (!type) { type = \"text\" };\r\n\r\n  function setTheState(event, key) {\r\n    statefulObject.setState({ [key]: event?.target?.value });\r\n  }\r\n\r\n  return (\r\n    <div className=\"text-left\">\r\n      <label className=\"mb-0\">{label}</label>\r\n      <div className=\"text-center text-wrap mb-2\">\r\n        <input\r\n          className=\"form-control\"\r\n          onChange={(ev) => setTheState(ev, stateFieldName)}\r\n          value={initialValue} type={type}\r\n          disabled={disabled}\r\n          min={min}\r\n          max={max}\r\n        >\r\n        </input>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport axios from 'axios';\nimport Const from './Constants';\n\nclass AjaxService extends React.Component {\n\n  execute = (method, url, data, isToEscape) => {\n    let headers = {};\n    headers[\"Content-Type\"] = \"application/json;charset=utf-8\";\n    headers[Const.AUTH_HEADER_NAME] = this[Const.AUTH_HEADER_NAME];\n\n    if (isToEscape) {\n      data = JSON.stringify(data).replace(\"{\", \"\");\n    }\n\n    return axios({\n      method: method,\n      url: url,\n      data: { \"json\": data },\n      headers: headers\n    });\n  };\n\n  doPost = (url, data, isToescape) => {\n    return this.execute('post', url, data, isToescape);\n  };\n\n  doPut = (url, data, isToescape) => {\n    return this.execute('put', url, data, isToescape);\n  };\n\n  doGet = (url) => {\n    return this.execute('get', url, {}, false);\n  };\n\n  doDelete = (url) => {\n    return this.execute('delete', url, {}, false);\n  };\n\n  setSecret = (secret) => {\n    this[Const.AUTH_HEADER_NAME] = secret;\n  };\n\n  /// wake up backend server as it falls asleep if not used\n  wakeServer = () => {\n    this.doGet(Const.URLS.WAKE_SERVER);\n  }\n}\n\nexport default new AjaxService();\n","import React from 'react';\nimport \"react-table/react-table.css\"\nimport Const from '../services/Constants';\nimport AjaxService from '../services/AjaxService';\nimport { SetStateInput } from '../parts/TinyParts';\nimport History from '../services/RouteHistoryProvider';\nimport DataAccessService from '../services/DataAccessService';\n\nclass Authenticate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleSubmit = () => {\n    const encodedString = Buffer.from(this.state.name + \":\" + this.state.pass).toString('base64');\n    let promise = AjaxService.doPost(Const.URLS.AUTH, encodedString, false);\n    promise.then((data) => {\n      AjaxService.setSecret(data?.data);\n      DataAccessService.setIsAdmin(true);\n      History.goTo(\"/get-orders\");\n    }).catch((e) => {\n      History.goTo(\"/error\", e)\n      AjaxService.setSecret(null);\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"text-center text-wrap\">\n        <br />\n        <p />\n        <br />\n        <p />\n        <label>За администратор:</label>\n        <br />\n        <div className=\" btn-group \">\n          <SetStateInput stateFieldName=\"name\" statefulObject={this} label=\"Username\" />\n        </div>\n        <br />\n        <div className=\" btn-group \">\n          <SetStateInput stateFieldName=\"pass\" statefulObject={this} label=\"Password\" type=\"password\" />\n        </div>\n        <br />\n        <p />\n        <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleSubmit}>Вход</button>\n      </div>\n    )\n  }\n}\n\nexport default Authenticate;\n","import React from 'react';\nimport Const from './Constants';\nimport AjaxService from './AjaxService';\nimport History from './RouteHistoryProvider';\n\nclass DataKeeperService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.currentOrder = {};\n    this.isSitePristine = true;\n    this.allOrders = {};\n    this.selectedDateForOrders = \"\"; //  to keep state for SelectOrders view\n    this.isAdmin = false;\n    this.priceList = [];\n    AjaxService.wakeServer();\n  };\n\n  getCurrentOrder = () => {\n    return this.currentOrder;\n  }\n\n  getOrdersForDate = (date) => {\n    return this.allOrders[date];\n  }\n\n  setOrdersForDate = (date, orders) => {\n    this.allOrders[date] = orders;\n  }\n\n  getSelectedDateForOrders = () => {\n    return this.selectedDateForOrders;\n  }\n\n  setSelectedDateForOrders = (date) => {\n    this.selectedDateForOrders = date;\n  }\n\n  clearCurrentOrder = () => {\n    this.currentOrder = {};\n  }\n\n  isPristine = () => {\n    return this.isSitePristine;\n  }\n  setPristine = (isPristine) => {\n    this.isSitePristine = isPristine;\n  }\n\n  getPriceListObj = () => {\n    let arr = this.getPriceList()\n    let obj = {};\n\n    arr.forEach(one => {\n      obj[one.id] = one\n    });\n    return obj;\n  }\n\n  getPriceList = () => {\n    if (!!this.priceList && this.priceList.length > 0) {\n      return this.priceList;\n    }\n    let promise = AjaxService.doGet(Const.URLS.ITEMS);\n    promise.then(data => {\n      this.setPriceList(data?.data?.items || []);\n    }).catch(e => {\n      History.goTo(\"/error\", e)\n    })\n    return this.priceList;\n  }\n\n  setPriceList = (priceList) => {\n    this.priceList = priceList;\n  }\n\n  getIsAdmin = () => {\n    return this.isAdmin;\n  }\n\n  setIsAdmin = (isAdmin) => {\n    this.isAdmin = isAdmin;\n  }\n}\nexport default new DataKeeperService();\n\n\n","import React from 'react';\nimport { withRouter } from 'react-router-dom'\n\nclass RouteHistoryProviderCl extends React.Component {\n  constructor(props) {\n    super(props);\n    let { history, historyHolder } = props;\n    if (!!history && !!historyHolder) {\n      historyHolder.importHistory(history)\n    } else {\n      console.error(\"Those objects should NOT be null \" + history + historyHolder);\n    }\n  }\n\n  render() { return null }\n}\n\nexport const RouteHistoryProvider = withRouter(RouteHistoryProviderCl);\n\n////////////\n\nclass History extends React.Component {\n\n  importHistory = (historyObj) => {\n    if (!!historyObj) {\n      this.history = historyObj\n    } else {\n      console.error(\"One object CANNOT be null: \" + historyObj);\n    }\n  }\n\n  goTo = (url, data) => {\n    if (!this.history) {\n      console.error(\"The object should NOT be null: \" + this.history);\n      return;\n    }\n\n    this.history.push({\n      pathname: url,\n      state: data\n    })\n  }\n\n}\n\nexport default new History()","const zeros = \"000000000000000000000\";\nconst separator = detectSeparator();\n\nfunction detectSeparator() {\n    return \".\";\n  }\n\nexport function flToInt(floatVal1, precision) {\n  let str = \"\" + floatVal1;\n  str = zeroFill(str, precision).replace(separator, \"\");\n  return parseInt(str);\n}\n\nexport function intToFl(intV, precision) {\n  let str = zeros + intV;\n  let decimalPart = str.substring(str.length - precision);\n  let wholePart = str.substring(0, str.length - decimalPart.length);\n\n  return parseFloat(wholePart + separator + decimalPart);\n}\n\nexport function add(floatVal1, floatVal2) {\n  let int1 = flToInt(floatVal1);\n  let int2 = flToInt(floatVal2);\n  return intToFl(int1 + int2, 2)\n}\n\nexport function zeroFill(str, precision) {\n  let arr = str.split(separator);\n  let decimalNum = (arr[1] || zeros) + zeros;\n\n  return arr[0] + decimalNum.substring(0, precision);\n}\n","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport { withRouter } from 'react-router-dom'\nimport { TextWrapper } from '../parts/TinyParts';\nimport DataAccessService from '../services/DataAccessService';\nimport { NavLinkButton } from '../parts/TinyParts';\nimport { intToFl, flToInt } from '../services/MathUtils';\n\nclass Basket extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      beanId: props.beanId,\n      allFr: [],\n      currentOrder: DataAccessService.getCurrentOrder()\n    };\n  };\n\n  text = (text) => {\n    return (<TextWrapper title={text} />);\n  };\n\n  render() {\n\n    let allItems = DataAccessService.getCurrentOrder();\n    let arr = [];\n\n    //object to array:\n    Object.keys(allItems)\n      .forEach((key) => {\n        arr.push(allItems[key])\n      });\n\n    arr = arr\n      .filter(one => { return one.quantity !== 0 })\n      .map(one => {\n        return { ...one.orderedItem, quantity: one.quantity }\n      });\n\n    arr = prepareCalculationPricelist(arr);\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Артикул\",\n            accessor: \"title\"\n          },\n          {\n            Header: \"Инфо\",\n            accessor: \"info\",\n            width: 250\n          },\n          {\n            Header: \"Цена, опаковка\",\n            accessor: \"price\",\n            width: 140\n          },\n          {\n            Header: \"К-во\",\n            accessor: \"quantity\",\n            width: 75\n          },\n          {\n            Header: \"Общо\",\n            accessor: \"total\",\n            width: 100,\n          }\n        ]\n      }\n    ];\n\n    return (\n      <div>\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={arr}\n            columns={present}\n            sortable={false}\n            defaultPageSize={arr.length}\n            pageSize={arr.length}\n            showPagination={false}\n          />\n          <br />\n        </div>\n        <div className=\"text-center\">\n          <div className=\" btn-group \">\n            <NavLinkButton to=\"/items\" label=\"◀️\" />\n            <NavLinkButton to=\"/order-details\" label=\"▶️\" />\n          </div>\n        </div>\n      </div>\n    );\n  };\n};\n\nexport default withRouter(Basket);\n\nexport const prepareCalculationPricelist = (arr) => {\n  let totalPrice = 0;\n  arr = arr\n    .map(one => {\n      let quantity = one.quantity;\n      let currentSum = quantity * flToInt(one.price, 2);\n      totalPrice = totalPrice + currentSum;\n\n      let obj = {\n        title: <TextWrapper title={one.title} />,\n        quantity: <TextWrapper title={quantity} />,\n        info: <TextWrapper title={one.info} />,\n        price: <TextWrapper title={one.price + \" лв\"} />,\n        total: <TextWrapper title={intToFl(currentSum, 2) + \" лв\"} />,\n      }\n      return { ...obj };\n    });\n\n  arr.push({\n    title: <TextWrapper title={\"Общо за поръчка\"} />,\n    quantity: <TextWrapper title={\"\"} />,\n    price: <TextWrapper title={\"\"} />,\n    total: <TextWrapper title={intToFl(totalPrice, 2) + \" лв\"} />\n  });\n\n  return arr;\n};\n\n","import React from 'react';\nimport \"react-table/react-table.css\"\nimport { withRouter } from 'react-router-dom'\nimport DataAccessService from '../services/DataAccessService';\nimport { SetStateInput } from '../parts/TinyParts';\nimport AjaxService from '../services/AjaxService';\nimport Const from '../services/Constants';\nimport History from '../services/RouteHistoryProvider';\n\n\nclass EditItems extends React.Component {\n  constructor(props) {\n    super(props);\n    let item = props?.location?.state?.item || {};\n\n    this.state = {\n      title: item.title || \"\",\n      id: item.id || this.getId(),\n      price: item.price || \"\",\n      info: item.info || \"\",\n      isDisabled: false\n    };\n  };\n\n  stateToObj = () => {\n    let price = \"\" + this.state.price;\n    price = parseFloat(price.replace(\",\", \".\"));\n    return {\n      title: this.state.title,\n      id: this.state.id,\n      price: parseFloat(price),\n      info: this.state.info\n    };\n  };\n\n  getId = () => {\n    let str = new Date().getTime() + \"i\";\n    str = str.split('').reverse().join('').substring(0, 6);\n\n    let arr = DataAccessService.getPriceList();\n    let index = arr.findIndex(item => item.id === str);\n\n    if (index > -1) {\n      return this.getId();\n    }\n\n    return str;\n  };\n\n  change = () => {\n    this.setState({isDisabled: true});\n    let obj = DataAccessService.getPriceListObj();\n\n    let editedObj = this.stateToObj();\n\n    obj[editedObj.id] = editedObj;\n    let arr = [];\n\n    Object.keys(obj)\n      .forEach((key) => {\n        arr.push(obj[key])\n      });\n\n    this.saveToBackend(arr);\n  };\n\n  cancel = () => {\n    History.goTo(\"/edit-items-list\");\n  };\n\n  delete = (id) => {\n    var answer = window.confirm(\"🔥🔥🔥 Изтриване завинаги? 🔥🔥🔥\");\n    if (answer) {\n      this.setState({isDisabled: true});\n      let array = DataAccessService.getPriceList();\n      let newArray = [];\n      let newArrayIndex = 0;\n      for (let index = 0; index < array.length; index++) {\n        const element = array[index];\n        if (element.id !== id) {\n          newArray[newArrayIndex] = element;\n          newArrayIndex++;\n        };\n      };\n      this.saveToBackend(newArray);\n    };\n  };\n\n  saveToBackend = (items) => {\n    let promise = AjaxService.doPost(Const.URLS.ITEMS, { items }, true);\n    promise.then((data) => {\n      DataAccessService.setPriceList(items);\n      History.goTo(\"/edit-items-list\");\n    }).catch((e) => {\n      History.goTo(\"/error\", e);\n      this.setState({isDisabled: false})\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div title=\"Например Бадем, Белени семки и тн.\">\n          <SetStateInput stateFieldName=\"title\" statefulObject={this} label=\"Име на артикул \" />\n        </div>\n        <div title=\"Цена в лева за 1 опаковка, с точност до втория знак. Например 18.05.\">\n          <SetStateInput stateFieldName=\"price\" statefulObject={this} label=\"Цена\" type=\"number\" />\n        </div>\n        <div title=\"Например тегло или големина на опаковките.\">\n          <SetStateInput stateFieldName=\"info\" statefulObject={this} label=\"Допълнителна информация\" />\n        </div>\n        <div className=\"text-center\">\n          <button className=\"btn btn-primary\" disabled={this.state.isDisabled} onClick={this.change} >Запази</button>\n          <button className=\"btn btn-primary\" onClick={this.cancel} >Откажи</button>\n        </div>\n        <br />\n        <div className=\"text-center\" title=\"ВНИМАНИЕ!!! Изтрива този артикул от базата!\">\n          <button className=\"btn btn-danger\" disabled={this.state.isDisabled} onClick={() => this.delete(this.state?.id)} >Изтрий</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(EditItems);","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport { TextWrapper } from '../parts/TinyParts'\nimport DataAccessService from '../services/DataAccessService';\nimport History from '../services/RouteHistoryProvider';\n\nconst Buttons = (args) => {\n  let { submitF, item } = args\n  return (\n    <div className=\"text-center text-wrap\">\n      <div className=\" btn-group \">\n        <button className=\"btn btn-primary\" onClick={() => submitF(item)} >🛠️</button>\n      </div>\n    </div>\n  )\n}\n\nclass EditItemsList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentOrder: DataAccessService.getCurrentOrder()\n    };\n  }\n\n  onChangeFunc = (e, orderedItem, currentOrder) => {\n    let q = parseInt(e.target.value)\n    let newOrder = {\n      quantity: q,\n      orderedItem: orderedItem\n    }\n    currentOrder[orderedItem.id] = newOrder\n    this.setState({ currentOrder: currentOrder })\n  }\n\n  orderWrapperProps = (item) => {\n    return {\n      orderedItem: item,\n      wholeOrder: this.state.currentOrder,\n      onChangeFunc: this.onChangeFunc,\n      initialValue: this.state.currentOrder[item.id]?.quantity || \"\"\n    }\n  }\n\n  submit = (item) => {\n    History.goTo(\"/edit-item\", { \"item\": item })\n  }\n\n  goToFaqView = () => {\n    History.goTo(\"/faq\")\n  }\n\n  prepareViewData = (allItems) => {\n    let data = allItems.map(oneItem => {\n      let obj = {\n        title: <TextWrapper title={oneItem.title} />,\n        info: <TextWrapper title={oneItem.info} />,\n        price: <TextWrapper title={oneItem.price + \" лв\"} />,\n        buttons: <Buttons item={oneItem} submitF={this.submit} />,\n      }\n      return { ...obj };\n    });\n    return data\n  }\n\n  render() {\n    let allItems = DataAccessService.getPriceList();\n\n    let data = this.prepareViewData(allItems)\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Артикул\",\n            accessor: \"title\"\n          },\n          {\n            Header: \"Инфо\",\n            accessor: \"info\"\n          },\n          {\n            Header: \"Цена, опаковка\",\n            accessor: \"price\",\n            width: 140\n          },\n          {\n            Header: \"\",\n            accessor: \"buttons\",\n            width: 60,\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div className=\"text-left\">\n        <div className=\" btn-group \">\n        <button className=\"btn btn-primary mr-1\" title=\"Обратно\" onClick={this.goToFaqView} >◀️</button>\n        <button className=\"btn btn-primary\" title=\"Добави нов артикул\" onClick={() => this.submit()} >➕</button>\n        </div>\n          \n        </div>\n        <br />\n        <ReactTable className=\"-striped -highlight\"\n          data={data}\n          columns={present}\n          sortable={false}\n          defaultPageSize={data.length}\n          pageSize={data.length}\n          showPagination={false}\n        />\n        <br />\n       \n      </div>\n    )\n  }\n}\n\nexport default EditItemsList;","import React from \"react\";\n\nimport { NavLinkButton } from \"./TinyParts\";\nimport DataAccessService from \"../services/DataAccessService\";\nimport History from '../services/RouteHistoryProvider';\n\nclass ErrorPage extends React.Component {\n  constructor(props) {\n    super(props);\n    let err = props.location?.state || {};\n    this.state = {\n      text: \"\" + err\n    };\n  };\n\n  ok = () => {\n    History.goTo(\"/edit-items-list\");\n  };\n\n  render() {\n    return (\n      <nav>\n        <div className=\"text-center\">\n          <label>{this.state.text}</label>\n          <p />\n          <br />\n          <NavLinkButton to=\"/\" label=\"OK\" />\n        </div>\n        <br />\n      </nav>\n    );\n  }\n}\n\nexport default ErrorPage;","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport { TextWrapper } from '../parts/TinyParts'\nimport History from '../services/RouteHistoryProvider';\nimport Const from '../services/Constants';\n\nclass Faq extends React.Component {\n\n  submit = () => {\n    History.goTo(\"/auth\");\n  }\n\n  getData = () => {\n    return [{\n      question: \"какви са контактите Ви?\",\n      answer: \"........\"\n    },\n    {\n      question: \"Как става поръчката...\",\n      answer: \"става...\"\n    },\n    {\n      question: \"Има ли цена за доставка\",\n      answer: \"за доставки над 100 лв транспортът е безплатен\"\n    }]\n  }\n\n  prepareViewData = (allItems) => {\n    let data = allItems.map(one => {\n      let obj = {\n        question: <TextWrapper title={one.question} />,\n        answer: <TextWrapper title={one.answer} />\n      }\n      return { ...obj };\n    });\n    return data\n  }\n\n  render() {\n    let allItems = this.getData();\n\n    let data = this.prepareViewData(allItems)\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Въпроси\",\n            accessor: \"question\",\n            width: 250\n          },\n          {\n            Header: \"Отговори\",\n            accessor: \"answer\"\n          }   \n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={data}\n            columns={present}\n            sortable={false}\n            defaultPageSize={data.length}\n            pageSize={data.length}\n            showPagination={false}\n          />\n          <br />\n        </div>\n        <button className=\"btn btn-primary\" onClick={this.submit} >🛠️</button>\n        <br />\n        <p />\n        <label>ver: {Const.VERSION}</label>\n      </div>\n    )\n  }\n}\n\nexport default Faq;","import React from 'react';\nimport \"react-table/react-table.css\"\nimport { withRouter } from 'react-router-dom'\nimport { SetStateInput } from '../parts/TinyParts'\nimport Const from '../services/Constants';\nimport DataAccessService from '../services/DataAccessService';\nimport AjaxService from '../services/AjaxService';\nimport History from '../services/RouteHistoryProvider';\n\n///Gets orders from backend\nclass GetOrders extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  getOrders = () => {\n    let month = this.state?.month;\n    let day = this.state?.date;\n\n    if (!month || !day) {\n      return;\n    }\n\n    month = month.startsWith(\"0\") ? month.replace(\"0\", \"\") : month;\n    day = day.startsWith(\"0\") ? day.replace(\"0\", \"\") : day;\n    day = month + \"/\" + day;\n\n    let promise = AjaxService.doGet(Const.URLS.ORDERS + day);\n    promise.then(data => {\n      DataAccessService.setSelectedDateForOrders(day);\n      DataAccessService.setOrdersForDate(day, data?.data);\n      History.goTo(\"/select-orders\")\n    }).catch(e => {\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"text-center\">\n        <label>Показване на поръчки. Изберете дата:</label>\n        <br />\n        <div className=\"btn-group\">\n          <div className=\"mr-3\">\n            <SetStateInput stateFieldName=\"date\" statefulObject={this} min={1} max={31} type=\"number\" label=\"Дата\" />\n          </div>\n          <SetStateInput stateFieldName=\"month\" statefulObject={this} min={1} max={12} type=\"number\" label=\"Месец\" />\n        </div>\n        <p />\n        <br />\n        <button className=\"btn btn-primary\" onClick={() => this.getOrders()} >ОК</button>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(GetOrders);","import React, { Component } from 'react';\nimport DataAccessService from './services/DataAccessService';\nimport History from './services/RouteHistoryProvider';\nimport AjaxService from './services/AjaxService';\nimport Const from './services/Constants';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHidden: true,\n      isButtonDisabled: false\n    };\n  }\n\n  getPriceList = () => {\n    this.setState({ isHidden: false, isButtonDisabled: true })\n    let promise = AjaxService.doGet(Const.URLS.ITEMS);\n    promise.then(data => {\n      DataAccessService.setPristine(false);\n      DataAccessService.setPriceList(data?.data?.items || []);\n      History.goTo(\"/items\")\n    }).catch(e => {\n      History.goTo(\"/error\", e)\n    })\n    return this.priceList;\n  }\n\n  render() {\n    return (\n      <div className=\"text-center\">\n        <p />\n        <br />\n        <h2>Добре дошли!</h2>\n        <p />\n        <br />\n        {this.state.isHidden ? null : <div className=\"spinner-border text-primary\" role=\"status\"></div>}\n        <h5>За поръчка на ядки, моля, разгледайте каталога!</h5>\n        <p />\n        <button disabled={this.state.isButtonDisabled} className=\"btn btn-primary\" onClick={this.getPriceList}>Каталог</button>\n      </div>\n    )\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport { withRouter } from 'react-router-dom'\nimport { TextWrapper, OrderWrapper, SetStateInput } from '../parts/TinyParts'\nimport DataAccessService from '../services/DataAccessService';\nimport History from '../services/RouteHistoryProvider';\n\nclass ItemsList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentOrder: DataAccessService.getCurrentOrder()\n    };\n  };\n\n  submit = () => {\n    History.goTo(\"/basket\");\n  };\n\n  onChangeFunc = (e, orderedItem, currentOrder) => {\n    let q = parseInt(e.target.value)\n    let newOrder = {\n      quantity: q,\n      orderedItem: orderedItem\n    };\n    currentOrder[orderedItem.id] = newOrder;\n    this.setState({ currentOrder: currentOrder });\n  };\n\n  orderWrapperProps = (item) => {\n    return {\n      orderedItem: item,\n      wholeOrder: this.state.currentOrder,\n      onChangeFunc: this.onChangeFunc,\n      initialValue: this.state.currentOrder[item?.id]?.quantity || \"\"\n    };\n  };\n\n  prepareViewData = (allItems) => {\n    let data = allItems.map(oneItem => {\n      let obj = {\n        title: <TextWrapper title={oneItem.title} />,\n        info: <TextWrapper title={oneItem.info} />,\n        price: <TextWrapper title={oneItem.price + \" лв.\"} />,\n        order: <OrderWrapper {...this.orderWrapperProps(oneItem)} />\n      };\n      return { ...obj };\n    });\n    return data;\n  }\n\n  render() {\n    let allItems = DataAccessService.getPriceList();\n\n    let data = this.prepareViewData(allItems);\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Артикул\",\n            accessor: \"title\"\n          },\n          {\n            Header: \"Инфо\",\n            accessor: \"info\",\n            width: 250\n          },\n          {\n            Header: \"Цена, опаковка\",\n            accessor: \"price\",\n            width: 140\n          },\n          {\n            Header: \"К-во\",\n            accessor: \"order\",\n            width: 75,\n          }\n        ]\n      }\n    ];\n\n    return (\n      <div>\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={data}\n            columns={present}\n            sortable={false}\n            defaultPageSize={data.length}\n            pageSize={data.length}\n            showPagination={false}\n\n          />\n          <br />\n        </div>\n        <div className=\"text-center\">\n          <button className=\"btn btn-primary\" onClick={this.submit} >▶️</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ItemsList);","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport { SetStateInput } from '../parts/TinyParts'\nimport DataAccessService from '../services/DataAccessService';\nimport { prepareCalculationPricelist } from '../customer/Basket';\n\nclass ReviewOrder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.allOrders = props?.location?.state?.allOrders || [];\n    let order = props?.location?.state?.order || {};\n    this.index = props?.location?.state?.index || 0;\n    this.state = this.makeStateObject(order);\n  }\n\n  makeStateObject = (order) => {\n    let priceMap = DataAccessService.getPriceListObj();\n    let ordersArr = order?.order || [];\n\n    for (let index = 0; index < ordersArr.length; index++) {\n      let orderItem = ordersArr[index]; // one item from the order\n      let priceListItem = priceMap[orderItem.id] || {};\n      orderItem.title = priceListItem.title\n      let warning = \"\";\n      if (priceListItem.price !== orderItem.price) {\n        warning = \"⚠️ Различни цени: ценова листа: \" + priceListItem.price + \"; поръчка: \" + orderItem.price + \"; \";\n      }\n      orderItem.info = warning + priceListItem.info;\n    }\n\n    return {\n      address: order.address || \" \",\n      email: order.email || \" \",\n      more: order.more || \" \",\n      hour: new Date(parseInt(order.date + \"000\")).toLocaleString() || \" \",\n      name: order.name || \" \",\n      phone: order.phone || \" \",\n      orderedItems: ordersArr || []\n    }\n  }\n\n  setTheState = (index) => {\n    if (index === undefined) {\n      return;\n    }\n\n    let order = this.allOrders[index] || {};\n    let newState = this.makeStateObject(order);\n    this.setState(newState)\n  }\n\n  prev = () => {\n    if (this.index < 1) {\n      return;\n    }\n    this.index--;\n    this.setTheState(this.index);\n  }\n\n  next = () => {\n    if (this.index >= this.allOrders.length - 1) {\n      return;\n    }\n    this.index++;\n    this.setTheState(this.index);\n  }\n\n  render() {\n    let data = this.state.orderedItems;\n\n    data = prepareCalculationPricelist(data);\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Артикул\",\n            accessor: \"title\"\n          },\n          {\n            Header: \"Инфо\",\n            accessor: \"info\",\n            width: 250\n          },\n          {\n            Header: \"Цена, опаковка\",\n            accessor: \"price\",\n            width: 140\n          },\n          {\n            Header: \"К-во\",\n            accessor: \"quantity\",\n            width: 75\n          },\n          {\n            Header: \"Общо\",\n            accessor: \"total\",\n            width: 100,\n          }\n        ]\n      }\n    ];\n\n    return (\n      <div>\n        <div className=\"text-center\">\n          <div className=\" btn-group \">\n            <div className=\"mdr-r1\">\n              <button className=\"btn btn-primary\" onClick={() => this.prev()} >◀️</button>\n            </div>\n            <button className=\"btn btn-primary\" onClick={() => this.next()} >▶️</button>\n          </div>\n          <br />\n          <div className=\"row\">\n            <div className=\"col\">\n              <SetStateInput stateFieldName=\"name\" statefulObject={this} label=\"Име\" disabled={true} />\n            </div>\n            <div className=\"col\">\n              <SetStateInput stateFieldName=\"phone\" statefulObject={this} label=\"Телефон\" disabled={true} />\n            </div>\n            <div className=\"col\">\n              <SetStateInput stateFieldName=\"email\" statefulObject={this} label=\"e-mail\" disabled={true} />\n            </div>\n            <div className=\"col\">\n              <SetStateInput stateFieldName=\"hour\" statefulObject={this} label=\"Час на поръчка\" disabled={true} />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <SetStateInput stateFieldName=\"address\" statefulObject={this} label=\"Адрес\" disabled={true} />\n            </div>\n            <div className=\"col\">\n              <SetStateInput stateFieldName=\"more\" statefulObject={this} label=\"Допълнителна информация\" disabled={true} />\n            </div>\n          </div>\n        </div>\n        <br />\n        <ReactTable className=\"-striped -highlight\"\n          data={data}\n          columns={present}\n          sortable={false}\n          defaultPageSize={data.length}\n          pageSize={data.length}\n          showPagination={false}\n        />\n      </div>\n    )\n  }\n}\n\nexport default ReviewOrder;","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport { TextWrapper, SetStateInput } from '../parts/TinyParts'\nimport DataAccessService from '../services/DataAccessService';\nimport History from '../services/RouteHistoryProvider';\n\nclass SelectOrders extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      orders: this.getData()\n    };\n  }\n\n  getData = () => {\n    let selectedDate = DataAccessService.getSelectedDateForOrders();\n    let orders = DataAccessService.getOrdersForDate(selectedDate) || {};\n    return this.objToArr(orders);\n  }\n\n  objToArr = (obj) => {\n    let arr = [];\n\n    let arrKeys = Object.keys(obj);\n\n    for (let index = 0; index < arrKeys.length; index++) {\n      const key = arrKeys[index];\n      const newObj = {\n        date: key,\n        ...obj[key]\n      };\n      arr[index] = newObj;\n    }\n\n    return arr;\n  }\n\n  submit = (order, index, allOrders) => {\n    History.goTo(\"/review-order\", {order, index, allOrders} )\n  }\n\n  prepareViewData = (allItems) => {\n    let index = 0;\n    let data = allItems.map(oneItem => {\n      let hour = new Date(parseInt(oneItem.date + \"000\")).toLocaleString();\n      hour = hour.split(\", \")?.[1];\n      let ind = index++;\n      let obj = {\n        name: <TextWrapper title={oneItem.name} />,\n        phone: <TextWrapper title={oneItem.phone} />,\n        address: <TextWrapper title={oneItem.address} />,\n        count: <TextWrapper title={oneItem.order?.length} />,\n        buttons: <button className=\"btn btn-primary\" onClick={() => this.submit(oneItem, ind, allItems)} >🔍</button>,\n        hour: <TextWrapper title={hour} />,\n      }\n      return { ...obj };\n    });\n    return data\n  }\n\n  render() {\n    let data = this.prepareViewData(this.state?.orders)\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Клиент\",\n            accessor: \"name\"\n          },\n          {\n            Header: \"Адрес\",\n            accessor: \"address\"\n          },\n          {\n            Header: \"Телефон\",\n            accessor: \"phone\",\n            width: 140\n          },\n          {\n            Header: \"Пакети\",\n            accessor: \"count\",\n            width: 65\n          },\n          {\n            Header: \"Час\",\n            accessor: \"hour\",\n            width: 90,\n          },\n          {\n            Header: \"\",\n            accessor: \"buttons\",\n            width: 60,\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <br />\n        <ReactTable className=\"-striped -highlight\"\n          data={data}\n          columns={present}\n          sortable={false}\n          defaultPageSize={data.length}\n          pageSize={data.length}\n        />\n      </div>\n    )\n  }\n}\n\nexport default SelectOrders;","\nimport React from 'react';\nimport \"react-table/react-table.css\"\nimport Const from '../services/Constants';\nimport AjaxService from '../services/AjaxService';\nimport DataAccessService from '../services/DataAccessService';\nimport { SetStateInput, NavLinkButton } from '../parts/TinyParts';\nimport History from '../services/RouteHistoryProvider';\n\nclass OrderDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDisabled: false\n    };\n  }\n\n  handleSubmit = () => {\n    let st = this.state;\n    if (!st.name || !st.email || !st.address || !st.phone) {\n      window.alert(\"Задължителни полета: Име, email, адрес, телефон!\");\n      return;\n    }\n\n    let confirm = window.confirm(\"Моля, потвърдете поръчката!\");\n    if (!confirm) {\n      return;\n    }\n    let allItems = DataAccessService.getCurrentOrder();\n    let arr = [];\n\n    Object.keys(allItems)\n      .forEach((key) => {\n        arr.push(allItems[key])\n      });\n\n    arr = arr\n      .filter(one => { return one.quantity !== 0 })\n      .map(one => {\n        return {\n          quantity: one.quantity,\n          price: one.orderedItem.price,\n          id: one.orderedItem.id\n        };\n      });\n\n    let data = {\n      name: this.state.name,\n      email: this.state.email,\n      address: this.state.address,\n      phone: this.state.phone,\n      more: this.state.more,\n      order: arr\n    };\n\n    this.setState({ isDisabled: true });\n    let promise = AjaxService.doPost(Const.URLS.ORDER, data, true);\n    promise.then((data) => {\n      History.goTo(\"/order-result\", { \"result\": \"Поръчка номер: \" + data.data + \" беше приета.\" });\n    }).catch((e) => {\n      this.setState({ isDisabled: false });\n      History.goTo(\"/error\", e);\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"text-left text-wrap\">\n        <label>Детайли за доставката:</label>\n        <br />\n        <p />\n        <br />\n        <div className=\"text-left text-wrap\">\n          <SetStateInput stateFieldName=\"name\" statefulObject={this} label=\"Имe\" />\n          <div className=\"row\">\n            <div className=\"col\">\n              <SetStateInput stateFieldName=\"phone\" statefulObject={this} label=\"Телефон\" type=\"tel\" />\n            </div>\n            <div className=\"col\">\n              <SetStateInput stateFieldName=\"email\" statefulObject={this} label=\"e-mail\" type=\"email\" />\n            </div>\n          </div>\n          <SetStateInput stateFieldName=\"address\" statefulObject={this} label=\"Aдрес за доставка\" />\n          <SetStateInput stateFieldName=\"more\" statefulObject={this} label=\"Още насоки\" />\n          <br />\n          <div className=\"text-center\">\n            <div className=\" btn-group \">\n              <NavLinkButton to=\"/basket\" label=\"Обратно\" />\n              <div>\n                <button type=\"submit\" className=\"btn btn-primary ml-1\" disabled={this.state.isDisabled} onClick={this.handleSubmit}>Поръчай!</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default OrderDetails;","import React from 'react';\nimport \"react-table/react-table.css\"\nimport DataAccessService from '../services/DataAccessService';\nimport History from '../services/RouteHistoryProvider';\n\nclass OrderResult extends React.Component {\n  constructor(props) {\n    super(props);\n    this.result = props?.location?.state?.result || \"Unknown result...\"\n  }\n\n  submit = () => {\n    DataAccessService.clearCurrentOrder();\n    History.goTo(\"/items\");\n  }\n\n  render() {\n    return (\n      <div className=\"text-center\">\n        <br />\n        <h5> {this.result}</h5>\n        <p />\n        <br />\n        <button className=\"btn btn-primary\" onClick={this.submit} >Друга поръчка?</button>\n      </div>\n    )\n  }\n}\n\nexport default OrderResult;","import React from \"react\";\n\nimport { NavLinkButton } from \"./TinyParts\";\nimport { withRouter } from 'react-router-dom';\nimport DataAccessService from \"../services/DataAccessService\";\n\nclass TopHeader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    let isPristine = DataAccessService.isPristine();\n    let isAdmin = DataAccessService.getIsAdmin();\n    return (\n      <nav>\n        <div className=\"text-center\">\n          <div className=\"btn-group\">\n            {!isPristine ? (<NavLinkButton to=\"/items\" label=\"Каталог\" />) : null}\n            {!isPristine ? (<NavLinkButton to=\"/basket\" label=\"Кошница\" />) : null}\n            {!isPristine ? (<NavLinkButton to=\"/faq\" label=\"Информация\" />) : null}\n            {isAdmin ? (<NavLinkButton to=\"/edit-items-list\" label=\"Промяна\" />) : null}\n            {isAdmin ? (<NavLinkButton to=\"/get-orders\" label=\"Поръчки\" />) : null}\n          </div>\n        </div>\n        <br />\n      </nav>\n    );\n  }\n}\n\nexport default withRouter(TopHeader);","import React from 'react';\nimport Authenticate from './admin/Authenticate';\nimport Basket from './customer/Basket';\nimport EditItem from './admin/EditItem';\nimport EditItemsList from './admin/EditItemsList';\nimport ErrorPage from './parts/ErrorPage';\nimport Faq from './customer/Faq';\nimport GetOrders from './admin/GetOrders';\nimport HistoryHolder from './services/RouteHistoryProvider';\nimport Home from './Home';\nimport ItemsList from './customer/ItemsList';\nimport ReviewOrder from './admin/ReviewOrder';\nimport SelectOrders from './admin/SelectOrders';\nimport OrderDetails from './customer/OrderDetails';\nimport OrderResult from './customer/OrderResult';\nimport TopHeader from './parts/TopHeader';\nimport {RouteHistoryProvider} from './services/RouteHistoryProvider';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\nconst App = () => {\n  return (\n    <div className=\"container\" style={{ paddingTop: 10 }}>\n\n      <Router>\n        <TopHeader />\n        <RouteHistoryProvider historyHolder={HistoryHolder} />\n        <Switch>\n          < Route exact path=\"/\" component={Home} />\n          < Route exact path=\"/basket\" component={Basket} />\n          < Route path=\"/get-orders\" component={GetOrders} />\n          < Route path=\"/select-orders\" component={SelectOrders} />\n          < Route path=\"/review-order\" component={ReviewOrder} />\n          < Route path=\"/items\" component={ItemsList} />\n          < Route path=\"/faq\" component={Faq} />\n          < Route path=\"/order-details\" component={OrderDetails} />\n          < Route path=\"/order-result\" component={OrderResult} />\n          < Route path=\"/auth\" component={Authenticate} />\n          < Route path=\"/edit-items-list\" component={EditItemsList} />\n          < Route path=\"/edit-item\" component={EditItem} />\n          < Route path=\"/error\" component={ErrorPage} />\n          < Route path=\"*\" component={Home} />\n        </Switch>\n      </Router>\n    </div >\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render( <App/> , document.getElementById('root'));\n\nserviceWorker.unregister();\n","//let ipAdress = 'http://localhost:5000/';\nlet ipAdress = 'https://nut-store.herokuapp.com/';\n\nconst Const = {\n  URLS: {\n    AUTH: ipAdress + \"auth\",\n    BASE_URL: ipAdress,\n    ITEMS:  ipAdress + \"items\",\n    ORDER:  ipAdress + \"order\",\n    ORDERS:  ipAdress + \"orders/\",\n    WAKE_SERVER: ipAdress + \"status\"\n  },\n  AUTH_HEADER_NAME: 'authsecret',\n  VERSION: '0.10'\n};\n\nexport default Const;\n"],"sourceRoot":""}