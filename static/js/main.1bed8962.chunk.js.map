{"version":3,"sources":["parts/TinyParts.js","services/AjaxService.js","services/DataAccessService.js","services/RouteHistoryProvider.js","admin/Authenticate.js","assests/snacking.gif","services/MathUtils.js","customer/Basket.js","admin/EditItem.js","admin/EditItemsList.js","parts/ErrorPage.js","customer/Faq.js","admin/GetOrders.js","Home.js","customer/ItemsList.js","admin/ReviewOrder.js","admin/SelectOrders.js","customer/OrderDetails.js","customer/OrderResult.js","parts/TopHeader.js","App.js","serviceWorker.js","index.js","services/Constants.js"],"names":["TextWrapper","args","className","title","NavLinkButton","props","exact","activeClassName","to","type","label","OrderWrapper","orderedItem","wholeOrder","onChangeFunc","initialValue","onChange","ev","value","min","SetStateInput","stateFieldName","statefulObject","disabled","max","state","event","key","setState","target","setTheState","AjaxService","execute","method","url","data","isToEscape","headers","Const","AUTH_HEADER_NAME","JSON","stringify","replace","axios","doPost","isToescape","doPut","doGet","doDelete","setSecret","secret","wakeServer","URLS","WAKE_SERVER","React","Component","DataKeeperService","getCurrentOrder","currentOrder","getOrdersForDate","date","allOrders","setOrdersForDate","orders","getSelectedDateForOrders","selectedDateForOrders","setSelectedDateForOrders","clearCurrentOrder","isPristine","isSitePristine","setPristine","getPriceListObj","arr","getPriceList","obj","forEach","one","id","priceList","length","ITEMS","then","setPriceList","items","catch","e","History","goTo","getIsAdmin","isAdmin","setIsAdmin","RouteHistoryProviderCl","history","historyHolder","importHistory","console","error","RouteHistoryProvider","withRouter","historyObj","push","pathname","Authenticate","handleSubmit","encodedString","Buffer","from","name","pass","toString","AUTH","DataAccessService","this","onClick","module","exports","zeros","flToInt","floatVal1","precision","str","split","decimalNum","substring","zeroFill","parseInt","intToFl","intV","decimalPart","wholePart","parseFloat","Basket","clear","makeOrder","order","Object","keys","window","alert","allItems","filter","quantity","map","prepareCalculationPricelist","columns","Header","accessor","maxWidth","sortable","defaultPageSize","pageSize","showPagination","totalPrice","currentSum","price","info","total","EditItems","stateToObj","getId","Date","getTime","reverse","join","findIndex","item","change","isDisabled","editedObj","saveToBackend","cancel","delete","confirm","array","newArray","newArrayIndex","index","element","location","Buttons","submitF","EditItemsList","newOrder","orderWrapperProps","submit","goToFaqView","prepareViewData","oneItem","buttons","ErrorPage","err","text","Faq","getData","question","answer","width","VERSION","GetOrders","getOrders","month","day","startsWith","ORDERS","Home","isHidden","isButtonDisabled","src","logo","alt","role","ItemsList","q","isNaN","ReviewOrder","makeStateObject","priceMap","ordersArr","orderItem","priceListItem","warning","address","email","more","hour","toLocaleString","phone","orderedItems","undefined","newState","prev","next","goToView","SelectOrders","selectedDate","objToArr","arrKeys","newObj","ind","OrderDetails","st","ORDER","OrderResult","result","TopHeader","App","style","paddingTop","HistoryHolder","path","component","EditItem","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","ipAdress","BASE_URL"],"mappings":"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","file":"static/js/main.1bed8962.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const TextWrapper = (args) => {\r\n  return (\r\n    <div className=\"text-left text-wrap\">\r\n      <label>{args.title}</label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const NavLinkButton = (props) => (\r\n  <div>\r\n    <NavLink exact activeClassName=\"active\" to={props.to}>\r\n      <button type=\"button\" className=\"btn btn-primary\">\r\n        {props.label}\r\n      </button>\r\n    </NavLink>\r\n  </div>\r\n)\r\n\r\nexport const OrderWrapper = (args) => {\r\n  let { orderedItem, wholeOrder, onChangeFunc, initialValue } = args\r\n  return (\r\n    <div className=\"text-center text-wrap\">\r\n      <input className=\"form-control\" onChange={(ev) => onChangeFunc(ev, orderedItem, wholeOrder)} value={initialValue} type=\"number\" min=\"0\"></input>\r\n    </div>\r\n  )\r\n}\r\n\r\n//changed field is 'state', which is part of the argument object 'statefulObject'\r\nexport const SetStateInput = (args) => {\r\n  let { stateFieldName, statefulObject, label, type, disabled, min, max } = args;\r\n\r\n  let initialValue = statefulObject.state[stateFieldName] || \"\";\r\n  if (!type) { type = \"text\" };\r\n\r\n  function setTheState(event, key) {\r\n    statefulObject.setState({ [key]: event?.target?.value });\r\n  }\r\n\r\n  return (\r\n    <div className=\"text-left\">\r\n      <label className=\"mb-0\">{label}</label>\r\n      <div className=\"text-center text-wrap mb-2\">\r\n        <input\r\n          className=\"form-control\"\r\n          onChange={(ev) => setTheState(ev, stateFieldName)}\r\n          value={initialValue} type={type}\r\n          disabled={disabled}\r\n          min={min}\r\n          max={max}\r\n        >\r\n        </input>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport axios from 'axios';\nimport Const from './Constants';\n\nclass AjaxService extends React.Component {\n\n  execute = (method, url, data, isToEscape) => {\n    let headers = {};\n    headers[\"Content-Type\"] = \"application/json;charset=utf-8\";\n    headers[Const.AUTH_HEADER_NAME] = this[Const.AUTH_HEADER_NAME];\n\n    if (isToEscape) {\n      data = JSON.stringify(data).replace(\"{\", \"\");\n    }\n\n    return axios({\n      method: method,\n      url: url,\n      data: { \"json\": data },\n      headers: headers\n    });\n  };\n\n  doPost = (url, data, isToescape) => {\n    return this.execute('post', url, data, isToescape);\n  };\n\n  doPut = (url, data, isToescape) => {\n    return this.execute('put', url, data, isToescape);\n  };\n\n  doGet = (url) => {\n    return this.execute('get', url, {}, false);\n  };\n\n  doDelete = (url) => {\n    return this.execute('delete', url, {}, false);\n  };\n\n  setSecret = (secret) => {\n    this[Const.AUTH_HEADER_NAME] = secret;\n  };\n\n  /// wake up backend server as it falls asleep if not used\n  wakeServer = () => {\n    this.doGet(Const.URLS.WAKE_SERVER);\n  }\n}\n\nexport default new AjaxService();\n","import React from 'react';\nimport Const from './Constants';\nimport AjaxService from './AjaxService';\nimport History from './RouteHistoryProvider';\n\nclass DataKeeperService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.currentOrder = {};\n    this.isSitePristine = true;\n    this.allOrders = {};\n    this.selectedDateForOrders = \"\"; //  to keep state for SelectOrders view\n    this.isAdmin = false;\n    this.priceList = [];\n    AjaxService.wakeServer();\n  };\n\n  getCurrentOrder = () => {\n    return this.currentOrder;\n  }\n\n  getOrdersForDate = (date) => {\n    return this.allOrders[date];\n  }\n\n  setOrdersForDate = (date, orders) => {\n    this.allOrders[date] = orders;\n  }\n\n  getSelectedDateForOrders = () => {\n    return this.selectedDateForOrders;\n  }\n\n  setSelectedDateForOrders = (date) => {\n    this.selectedDateForOrders = date;\n  }\n\n  clearCurrentOrder = () => {\n    this.currentOrder = {};\n  }\n\n  isPristine = () => {\n    return this.isSitePristine;\n  }\n  setPristine = (isPristine) => {\n    this.isSitePristine = isPristine;\n  }\n\n  getPriceListObj = () => {\n    let arr = this.getPriceList()\n    let obj = {};\n\n    arr.forEach(one => {\n      obj[one.id] = one\n    });\n    return obj;\n  }\n\n  getPriceList = () => {\n    if (!!this.priceList && this.priceList.length > 0) {\n      return this.priceList;\n    }\n    let promise = AjaxService.doGet(Const.URLS.ITEMS);\n    promise.then(data => {\n      this.setPriceList(data?.data?.items || []);\n    }).catch(e => {\n      History.goTo(\"/error\", e)\n    })\n    return this.priceList;\n  }\n\n  setPriceList = (priceList) => {\n    this.priceList = priceList;\n  }\n\n  getIsAdmin = () => {\n    return this.isAdmin;\n  }\n\n  setIsAdmin = (isAdmin) => {\n    this.isAdmin = isAdmin;\n  }\n}\nexport default new DataKeeperService();\n\n\n","import React from 'react';\nimport { withRouter } from 'react-router-dom'\n\nclass RouteHistoryProviderCl extends React.Component {\n  constructor(props) {\n    super(props);\n    let { history, historyHolder } = props;\n    if (!!history && !!historyHolder) {\n      historyHolder.importHistory(history)\n    } else {\n      console.error(\"Those objects should NOT be null \" + history + historyHolder);\n    }\n  }\n\n  render() { return null }\n}\n\nexport const RouteHistoryProvider = withRouter(RouteHistoryProviderCl);\n\n////////////\n\nclass History extends React.Component {\n\n  importHistory = (historyObj) => {\n    if (!!historyObj) {\n      this.history = historyObj\n    } else {\n      console.error(\"One object CANNOT be null: \" + historyObj);\n    }\n  }\n\n  goTo = (url, data) => {\n    if (!this.history) {\n      console.error(\"The object should NOT be null: \" + this.history);\n      return;\n    }\n\n    this.history.push({\n      pathname: url,\n      state: data\n    })\n  }\n\n}\n\nexport default new History()","import React from 'react';\nimport \"react-table/react-table.css\"\nimport Const from '../services/Constants';\nimport AjaxService from '../services/AjaxService';\nimport { SetStateInput } from '../parts/TinyParts';\nimport History from '../services/RouteHistoryProvider';\nimport DataAccessService from '../services/DataAccessService';\n\nclass Authenticate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleSubmit = () => {\n    const encodedString = Buffer.from(this.state.name + \":\" + this.state.pass).toString('base64');\n    let promise = AjaxService.doPost(Const.URLS.AUTH, encodedString, false);\n    promise.then((data) => {\n      AjaxService.setSecret(data?.data);\n      DataAccessService.setIsAdmin(true);\n      History.goTo(\"/get-orders\");\n    }).catch((e) => {\n      History.goTo(\"/error\", e)\n      AjaxService.setSecret(null);\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"text-center text-wrap\">\n        <br />\n        <p />\n        <br />\n        <p />\n        <label>За администратор:</label>\n        <br />\n        <div className=\" btn-group \">\n          <SetStateInput stateFieldName=\"name\" statefulObject={this} label=\"Username\" />\n        </div>\n        <br />\n        <div className=\" btn-group \">\n          <SetStateInput stateFieldName=\"pass\" statefulObject={this} label=\"Password\" type=\"password\" />\n        </div>\n        <br />\n        <p />\n        <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleSubmit}>Вход</button>\n      </div>\n    )\n  }\n}\n\nexport default Authenticate;\n","module.exports = __webpack_public_path__ + \"static/media/snacking.88595abc.gif\";","const zeros = \"000000000000000000000\";\nconst separator = detectSeparator();\n\nfunction detectSeparator() {\n    return \".\";\n  }\n\nexport function flToInt(floatVal1, precision) {\n  let str = \"\" + floatVal1;\n  str = zeroFill(str, precision).replace(separator, \"\");\n  return parseInt(str);\n}\n\nexport function intToFl(intV, precision) {\n  let str = zeros + intV;\n  let decimalPart = str.substring(str.length - precision);\n  let wholePart = str.substring(0, str.length - decimalPart.length);\n\n  return parseFloat(wholePart + separator + decimalPart);\n}\n\nexport function add(floatVal1, floatVal2) {\n  let int1 = flToInt(floatVal1);\n  let int2 = flToInt(floatVal2);\n  return intToFl(int1 + int2, 2)\n}\n\nexport function zeroFill(str, precision) {\n  let arr = str.split(separator);\n  let decimalNum = (arr[1] || zeros) + zeros;\n\n  return arr[0] + decimalNum.substring(0, precision);\n}\n","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport { TextWrapper } from '../parts/TinyParts';\nimport DataAccessService from '../services/DataAccessService';\nimport { NavLinkButton } from '../parts/TinyParts';\nimport { intToFl, flToInt } from '../services/MathUtils';\nimport History from '../services/RouteHistoryProvider';\n\nclass Basket extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentOrder: DataAccessService.getCurrentOrder()\n    };\n  };\n\n  clear = () => {\n    DataAccessService.clearCurrentOrder();\n    this.setState({ currentOrder: DataAccessService.getCurrentOrder() })\n  };\n\n  makeOrder = () => {\n    let order = DataAccessService.getCurrentOrder();\n    if (Object.keys(order).length < 1) {\n      window.alert(\"Количката е празна!\");\n      return;\n    }\n    History.goTo(\"/order-details\");\n  };\n\n  render() {\n\n    let allItems = DataAccessService.getCurrentOrder();\n    let arr = [];\n\n    //object to array:\n    Object.keys(allItems)\n      .forEach((key) => {\n        arr.push(allItems[key])\n      });\n\n    arr = arr\n      .filter(one => { return one.quantity !== 0 })\n      .map(one => {\n        return { ...one.orderedItem, quantity: one.quantity }\n      });\n\n    arr = prepareCalculationPricelist(arr);\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Артикул\",\n            accessor: \"title\"\n          },\n          {\n            Header: \"Инфо\",\n            accessor: \"info\",\n            maxWidth: 250\n          },\n          {\n            Header: \"Цена, опаковка\",\n            accessor: \"price\",\n            maxWidth: 140\n          },\n          {\n            Header: \"К-во\",\n            accessor: \"quantity\",\n            maxWidth: 75\n          },\n          {\n            Header: \"Общо\",\n            accessor: \"total\",\n            maxWidth: 100,\n          }\n        ]\n      }\n    ];\n\n    return (\n      <div>\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={arr}\n            columns={present}\n            sortable={false}\n            defaultPageSize={arr.length}\n            pageSize={arr.length}\n            showPagination={false}\n          />\n          <br />\n        </div>\n        <div className=\"text-center\">\n          <div className=\" btn-group \">\n            <NavLinkButton to=\"/items\" label=\"Назад\" />\n            <div className=\"ml-1\">\n              <button className=\"btn btn-danger\" onClick={this.clear}>Изтрий</button>\n            </div>\n            <div className=\"ml-1\">\n              <button className=\"btn btn-primary\" onClick={this.makeOrder}>Напред</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n};\n\nexport default Basket;\n\nexport const prepareCalculationPricelist = (arr) => {\n  let totalPrice = 0;\n  arr = arr\n    .map(one => {\n      let quantity = one.quantity;\n      let currentSum = quantity * flToInt(one.price, 2);\n      totalPrice = totalPrice + currentSum;\n\n      let obj = {\n        title: <TextWrapper title={one.title} />,\n        quantity: <TextWrapper title={quantity} />,\n        info: <TextWrapper title={one.info} />,\n        price: <TextWrapper title={one.price + \" лв\"} />,\n        total: <TextWrapper title={intToFl(currentSum, 2) + \" лв\"} />,\n      }\n      return { ...obj };\n    });\n\n  arr.push({\n    title: <TextWrapper title={\"Общо за поръчка\"} />,\n    quantity: <TextWrapper title={\"\"} />,\n    price: <TextWrapper title={\"\"} />,\n    total: <TextWrapper title={intToFl(totalPrice, 2) + \" лв\"} />\n  });\n\n  return arr;\n};\n\n","import React from 'react';\nimport \"react-table/react-table.css\"\nimport { withRouter } from 'react-router-dom'\nimport DataAccessService from '../services/DataAccessService';\nimport { SetStateInput } from '../parts/TinyParts';\nimport AjaxService from '../services/AjaxService';\nimport Const from '../services/Constants';\nimport History from '../services/RouteHistoryProvider';\n\n\nclass EditItems extends React.Component {\n  constructor(props) {\n    super(props);\n    let item = props?.location?.state?.item || {};\n\n    this.state = {\n      title: item.title || \"\",\n      id: item.id || this.getId(),\n      price: item.price || \"\",\n      info: item.info || \"\",\n      isDisabled: false\n    };\n  };\n\n  stateToObj = () => {\n    let price = \"\" + this.state.price;\n    price = parseFloat(price.replace(\",\", \".\"));\n    return {\n      title: this.state.title,\n      id: this.state.id,\n      price: parseFloat(price),\n      info: this.state.info\n    };\n  };\n\n  getId = () => {\n    let str = new Date().getTime() + \"i\";\n    str = str.split('').reverse().join('').substring(0, 6);\n\n    let arr = DataAccessService.getPriceList();\n    let index = arr.findIndex(item => item.id === str);\n\n    if (index > -1) {\n      return this.getId();\n    }\n\n    return str;\n  };\n\n  change = () => {\n    this.setState({isDisabled: true});\n    let obj = DataAccessService.getPriceListObj();\n\n    let editedObj = this.stateToObj();\n\n    obj[editedObj.id] = editedObj;\n    let arr = [];\n\n    Object.keys(obj)\n      .forEach((key) => {\n        arr.push(obj[key])\n      });\n\n    this.saveToBackend(arr);\n  };\n\n  cancel = () => {\n    History.goTo(\"/edit-items-list\");\n  };\n\n  delete = (id) => {\n    var answer = window.confirm(\"🔥🔥🔥 Изтриване завинаги? 🔥🔥🔥\");\n    if (answer) {\n      this.setState({isDisabled: true});\n      let array = DataAccessService.getPriceList();\n      let newArray = [];\n      let newArrayIndex = 0;\n      for (let index = 0; index < array.length; index++) {\n        const element = array[index];\n        if (element.id !== id) {\n          newArray[newArrayIndex] = element;\n          newArrayIndex++;\n        };\n      };\n      this.saveToBackend(newArray);\n    };\n  };\n\n  saveToBackend = (items) => {\n    let promise = AjaxService.doPost(Const.URLS.ITEMS, { items }, true);\n    promise.then((data) => {\n      DataAccessService.setPriceList(items);\n      History.goTo(\"/edit-items-list\");\n    }).catch((e) => {\n      History.goTo(\"/error\", e);\n      this.setState({isDisabled: false})\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div title=\"Например Бадем, Белени семки и тн.\">\n          <SetStateInput stateFieldName=\"title\" statefulObject={this} label=\"Име на артикул \" />\n        </div>\n        <div title=\"Цена в лева за 1 опаковка, с точност до втория знак. Например 18.05.\">\n          <SetStateInput stateFieldName=\"price\" statefulObject={this} label=\"Цена\" type=\"number\" />\n        </div>\n        <div title=\"Например тегло или големина на опаковките.\">\n          <SetStateInput stateFieldName=\"info\" statefulObject={this} label=\"Допълнителна информация\" />\n        </div>\n        <div className=\"text-center\">\n          <button className=\"btn btn-primary\" disabled={this.state.isDisabled} onClick={this.change} >Запази</button>\n          <button className=\"btn btn-primary\" onClick={this.cancel} >Откажи</button>\n        </div>\n        <br />\n        <div className=\"text-center\" title=\"ВНИМАНИЕ!!! Изтрива този артикул от базата!\">\n          <button className=\"btn btn-danger\" disabled={this.state.isDisabled} onClick={() => this.delete(this.state?.id)} >Изтрий</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(EditItems);","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport { TextWrapper } from '../parts/TinyParts'\nimport DataAccessService from '../services/DataAccessService';\nimport History from '../services/RouteHistoryProvider';\n\nconst Buttons = (args) => {\n  let { submitF, item } = args\n  return (\n    <div className=\"text-center text-wrap\">\n      <div className=\" btn-group \">\n        <button className=\"btn btn-primary\" onClick={() => submitF(item)} >🛠️</button>\n      </div>\n    </div>\n  )\n}\n\nclass EditItemsList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentOrder: DataAccessService.getCurrentOrder()\n    };\n  }\n\n  onChangeFunc = (e, orderedItem, currentOrder) => {\n    let q = parseInt(e.target.value)\n    let newOrder = {\n      quantity: q,\n      orderedItem: orderedItem\n    }\n    currentOrder[orderedItem.id] = newOrder\n    this.setState({ currentOrder: currentOrder })\n  }\n\n  orderWrapperProps = (item) => {\n    return {\n      orderedItem: item,\n      wholeOrder: this.state.currentOrder,\n      onChangeFunc: this.onChangeFunc,\n      initialValue: this.state.currentOrder[item.id]?.quantity || \"\"\n    }\n  }\n\n  submit = (item) => {\n    History.goTo(\"/edit-item\", { \"item\": item })\n  }\n\n  goToFaqView = () => {\n    History.goTo(\"/faq\")\n  }\n\n  prepareViewData = (allItems) => {\n    let data = allItems.map(oneItem => {\n      let obj = {\n        title: <TextWrapper title={oneItem.title} />,\n        info: <TextWrapper title={oneItem.info} />,\n        price: <TextWrapper title={oneItem.price + \" лв\"} />,\n        buttons: <Buttons item={oneItem} submitF={this.submit} />,\n      }\n      return { ...obj };\n    });\n    return data\n  }\n\n  render() {\n    let allItems = DataAccessService.getPriceList();\n\n    let data = this.prepareViewData(allItems)\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Артикул\",\n            accessor: \"title\"\n          },\n          {\n            Header: \"Инфо\",\n            accessor: \"info\"\n          },\n          {\n            Header: \"Цена, опаковка\",\n            accessor: \"price\",\n            maxWidth: 140\n          },\n          {\n            Header: \"\",\n            accessor: \"buttons\",\n            maxWidth: 60,\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div className=\"text-left\">\n          <div className=\" btn-group \">\n            <button className=\"btn btn-primary mr-1\" title=\"Обратно\" onClick={this.goToFaqView} >Обратно</button>\n            <button className=\"btn btn-primary\" title=\"Добави нов артикул\" onClick={() => this.submit()} >Добави нов</button>\n          </div>\n        </div>\n        <br />\n        <ReactTable className=\"-striped -highlight\"\n          data={data}\n          columns={present}\n          sortable={false}\n          defaultPageSize={data.length}\n          pageSize={data.length}\n          showPagination={false}\n        />\n        <br />\n      </div>\n    )\n  }\n}\n\nexport default EditItemsList;","import React from \"react\";\nimport { NavLinkButton } from \"./TinyParts\";\n\nclass ErrorPage extends React.Component {\n  constructor(props) {\n    super(props);\n    let err = props.location?.state || {};\n    this.state = {\n      text: \"\" + err\n    };\n  };\n\n  render() {\n    return (\n      <nav>\n        <div className=\"text-center\">\n          <label>{this.state.text}</label>\n          <p />\n          <br />\n          <NavLinkButton to=\"/\" label=\"OK\" />\n        </div>\n        <br />\n      </nav>\n    );\n  }\n}\n\nexport default ErrorPage;","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport { TextWrapper } from '../parts/TinyParts'\nimport History from '../services/RouteHistoryProvider';\nimport Const from '../services/Constants';\n\nclass Faq extends React.Component {\n\n  submit = () => {\n    History.goTo(\"/auth\");\n  }\n\n  getData = () => {\n    return [{\n      question: \"какви са контактите Ви?\",\n      answer: \"........\"\n    },\n    {\n      question: \"Как става поръчката...\",\n      answer: \"става...\"\n    },\n    {\n      question: \"Има ли цена за доставка\",\n      answer: \"за доставки над ... лв транспортът е безплатен\"\n    }]\n  }\n\n  prepareViewData = (allItems) => {\n    let data = allItems.map(one => {\n      let obj = {\n        question: <TextWrapper title={one.question} />,\n        answer: <TextWrapper title={one.answer} />\n      }\n      return { ...obj };\n    });\n    return data\n  }\n\n  render() {\n    let allItems = this.getData();\n\n    let data = this.prepareViewData(allItems)\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Въпроси\",\n            accessor: \"question\",\n            width: 250\n          },\n          {\n            Header: \"Отговори\",\n            accessor: \"answer\"\n          }   \n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={data}\n            columns={present}\n            sortable={false}\n            defaultPageSize={data.length}\n            pageSize={data.length}\n            showPagination={false}\n          />\n          <br />\n        </div>\n        <button className=\"btn btn-primary\" onClick={this.submit} >🛠️</button>\n        <br />\n        <p />\n        <label>ver: {Const.VERSION}</label>\n        <br />\n        <p />\n        <label>elken ©</label>\n      </div>\n    )\n  }\n}\n\nexport default Faq;","import React from 'react';\nimport \"react-table/react-table.css\"\nimport { withRouter } from 'react-router-dom'\nimport { SetStateInput } from '../parts/TinyParts'\nimport Const from '../services/Constants';\nimport DataAccessService from '../services/DataAccessService';\nimport AjaxService from '../services/AjaxService';\nimport History from '../services/RouteHistoryProvider';\n\n///Gets orders from backend\nclass GetOrders extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  getOrders = () => {\n    let month = this.state?.month;\n    let day = this.state?.date;\n\n    if (!month || !day) {\n      return;\n    }\n\n    month = month.startsWith(\"0\") ? month.replace(\"0\", \"\") : month;\n    day = day.startsWith(\"0\") ? day.replace(\"0\", \"\") : day;\n    day = month + \"/\" + day;\n\n    let promise = AjaxService.doGet(Const.URLS.ORDERS + day);\n    promise.then(data => {\n      DataAccessService.setSelectedDateForOrders(day);\n      DataAccessService.setOrdersForDate(day, data?.data);\n      History.goTo(\"/select-orders\")\n    }).catch(e => {\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"text-center\">\n        <label>Показване на поръчки. Изберете дата:</label>\n        <br />\n        <div className=\"btn-group\">\n          <div className=\"mr-3\">\n            <SetStateInput stateFieldName=\"date\" statefulObject={this} min={1} max={31} type=\"number\" label=\"Дата\" />\n          </div>\n          <SetStateInput stateFieldName=\"month\" statefulObject={this} min={1} max={12} type=\"number\" label=\"Месец\" />\n        </div>\n        <p />\n        <br />\n        <button className=\"btn btn-primary\" onClick={() => this.getOrders()} >ОК</button>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(GetOrders);","import React, { Component } from 'react';\nimport DataAccessService from './services/DataAccessService';\nimport History from './services/RouteHistoryProvider';\nimport AjaxService from './services/AjaxService';\nimport Const from './services/Constants';\nimport logo from './assests/snacking.gif'\n\n\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHidden: true,\n      isButtonDisabled: false\n    };\n  }\n\n  getPriceList = () => {\n    this.setState({ isHidden: false, isButtonDisabled: true })\n    let promise = AjaxService.doGet(Const.URLS.ITEMS);\n    promise.then(data => {\n      DataAccessService.setPristine(false);\n      DataAccessService.setPriceList(data?.data?.items || []);\n      History.goTo(\"/items\")\n    }).catch(e => {\n      History.goTo(\"/error\", e)\n    })\n    return this.priceList;\n  }\n\n  render() {\n    return (\n      <div className=\"text-center\">\n        <p />\n        <br />\n        <img src={logo} alt=\"loading...\" />\n        <br />\n        <h5>За поръчка на ядки, моля, разгледайте каталога!</h5>\n        <p />\n        <br />\n        <button disabled={this.state.isButtonDisabled} className=\"btn btn-primary\" onClick={this.getPriceList}>Каталог</button>\n        <p />\n        <br />\n        {this.state.isHidden ? null : <div className=\"spinner-border text-primary\" role=\"status\"></div>}\n      </div>\n    )\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport { TextWrapper, OrderWrapper } from '../parts/TinyParts'\nimport DataAccessService from '../services/DataAccessService';\nimport History from '../services/RouteHistoryProvider';\n\nclass ItemsList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentOrder: DataAccessService.getCurrentOrder()\n    };\n  };\n\n  submit = () => {\n    History.goTo(\"/basket\");\n  };\n\n  onChangeFunc = (e, orderedItem, currentOrder) => {\n    let q = parseInt(e.target.value)\n\n    if (isNaN(q)) {\n      q = 0;\n    }\n\n    let newOrder = {\n      quantity: q,\n      orderedItem: orderedItem\n    };\n    currentOrder[orderedItem.id] = newOrder;\n    this.setState({ currentOrder: currentOrder });\n  };\n\n  orderWrapperProps = (item) => {\n    return {\n      orderedItem: item,\n      wholeOrder: this.state.currentOrder,\n      onChangeFunc: this.onChangeFunc,\n      initialValue: this.state.currentOrder[item?.id]?.quantity || \"\"\n    };\n  };\n\n  prepareViewData = (allItems) => {\n    let data = allItems.map(oneItem => {\n      let obj = {\n        title: <TextWrapper title={oneItem.title} />,\n        info: <TextWrapper title={oneItem.info} />,\n        price: <TextWrapper title={oneItem.price + \" лв.\"} />,\n        order: <OrderWrapper {...this.orderWrapperProps(oneItem)} />\n      };\n      return { ...obj };\n    });\n    return data;\n  }\n\n  render() {\n    let allItems = DataAccessService.getPriceList();\n\n    let data = this.prepareViewData(allItems);\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Артикул\",\n            accessor: \"title\"\n          },\n          {\n            Header: \"Инфо\",\n            accessor: \"info\",\n            maxWidth: 250\n          },\n          {\n            Header: \"Цена, опаковка\",\n            accessor: \"price\",\n            maxWidth: 140\n          },\n          {\n            Header: \"К-во\",\n            accessor: \"order\",\n            maxWidth: 75\n          }\n        ]\n      }\n    ];\n\n    return (\n      <div>\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={data}\n            columns={present}\n            sortable={false}\n            defaultPageSize={data.length}\n            pageSize={data.length}\n            showPagination={false}\n\n          />\n          <br />\n        </div>\n        <div className=\"text-center\">\n          <button className=\"btn btn-primary\" onClick={this.submit} >Напред</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ItemsList;","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport { SetStateInput } from '../parts/TinyParts'\nimport DataAccessService from '../services/DataAccessService';\nimport { prepareCalculationPricelist } from '../customer/Basket';\nimport History from '../services/RouteHistoryProvider';\n\nclass ReviewOrder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.allOrders = props?.location?.state?.allOrders || [];\n    let order = props?.location?.state?.order || {};\n    this.index = props?.location?.state?.index || 0;\n    this.state = this.makeStateObject(order);\n  }\n\n  makeStateObject = (order) => {\n    let priceMap = DataAccessService.getPriceListObj();\n    let ordersArr = order?.order || [];\n\n    for (let index = 0; index < ordersArr.length; index++) {\n      let orderItem = ordersArr[index]; // one item from the order\n      let priceListItem = priceMap[orderItem.id] || {};\n      orderItem.title = priceListItem.title\n      let warning = \"\";\n      if (priceListItem.price !== orderItem.price) {\n        warning = \"⚠️ Различни цени: ценова листа: \" + priceListItem.price + \"; поръчка: \" + orderItem.price + \"; \";\n      }\n      orderItem.info = warning + priceListItem.info;\n    }\n\n    return {\n      address: order.address || \" \",\n      email: order.email || \" \",\n      more: order.more || \" \",\n      hour: new Date(parseInt(order.date + \"000\")).toLocaleString() || \" \",\n      name: order.name || \" \",\n      phone: order.phone || \" \",\n      orderedItems: ordersArr || []\n    }\n  }\n\n  setTheState = (index) => {\n    if (index === undefined) {\n      return;\n    }\n\n    let order = this.allOrders[index] || {};\n    let newState = this.makeStateObject(order);\n    this.setState(newState)\n  }\n\n  prev = () => {\n    if (this.index < 1) {\n      return;\n    }\n    this.index--;\n    this.setTheState(this.index);\n  }\n\n  next = () => {\n    if (this.index >= this.allOrders.length - 1) {\n      return;\n    }\n    this.index++;\n    this.setTheState(this.index);\n  }\n\n  goToView = () => {\n    History.goTo(\"/select-orders\")\n  }\n\n  render() {\n    let data = this.state.orderedItems;\n\n    data = prepareCalculationPricelist(data);\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Артикул\",\n            accessor: \"title\"\n          },\n          {\n            Header: \"Инфо\",\n            accessor: \"info\",\n            maxWidth: 250\n          },\n          {\n            Header: \"Цена, опаковка\",\n            accessor: \"price\",\n            maxWidth: 140\n          },\n          {\n            Header: \"К-во\",\n            accessor: \"quantity\",\n            maxWidth: 75\n          },\n          {\n            Header: \"Общо\",\n            accessor: \"total\",\n            maxWidth: 100\n          }\n        ]\n      }\n    ];\n\n    return (\n      <div>\n        <div className=\"text-center\">\n          <div className=\" btn-group \">\n            <div className=\"text-left\">\n              <button className=\"btn btn-primary mr-4\" onClick={this.goToView} >Обратно</button>\n            </div>\n            <div className=\"mr-1\">\n              <button className=\"btn btn-primary\" onClick={() => this.prev()} >◀️</button>\n            </div>\n            <div >\n              <button className=\"btn btn-primary\" onClick={() => this.next()} >▶️</button>\n            </div>\n          </div>\n          <br />\n          <div className=\"row\">\n            <div className=\"col\">\n              <SetStateInput stateFieldName=\"name\" statefulObject={this} label=\"Име\" disabled={true} />\n            </div>\n            <div className=\"col\">\n              <SetStateInput stateFieldName=\"phone\" statefulObject={this} label=\"Телефон\" disabled={true} />\n            </div>\n            <div className=\"col\">\n              <SetStateInput stateFieldName=\"email\" statefulObject={this} label=\"e-mail\" disabled={true} />\n            </div>\n            <div className=\"col\">\n              <SetStateInput stateFieldName=\"hour\" statefulObject={this} label=\"Час на поръчка\" disabled={true} />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <SetStateInput stateFieldName=\"address\" statefulObject={this} label=\"Адрес\" disabled={true} />\n            </div>\n            <div className=\"col\">\n              <SetStateInput stateFieldName=\"more\" statefulObject={this} label=\"Допълнителна информация\" disabled={true} />\n            </div>\n          </div>\n        </div>\n        <br />\n        <ReactTable className=\"-striped -highlight\"\n          data={data}\n          columns={present}\n          sortable={false}\n          defaultPageSize={data.length}\n          pageSize={data.length}\n          showPagination={false}\n        />\n        <br />\n        <div className=\"text-center\">\n          <div className=\"btn-group\">\n            <button className=\"btn btn-primary mr-1\" title=\"Обратно\" onClick={this.goToView} >Обратно</button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ReviewOrder;","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport { TextWrapper, SetStateInput } from '../parts/TinyParts'\nimport DataAccessService from '../services/DataAccessService';\nimport History from '../services/RouteHistoryProvider';\n\nclass SelectOrders extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      orders: this.getData()\n    };\n  }\n\n  getData = () => {\n    let selectedDate = DataAccessService.getSelectedDateForOrders();\n    let orders = DataAccessService.getOrdersForDate(selectedDate) || {};\n    return this.objToArr(orders);\n  }\n\n  objToArr = (obj) => {\n    let arr = [];\n\n    let arrKeys = Object.keys(obj);\n\n    for (let index = 0; index < arrKeys.length; index++) {\n      const key = arrKeys[index];\n      const newObj = {\n        date: key,\n        ...obj[key]\n      };\n      arr[index] = newObj;\n    }\n\n    return arr;\n  }\n\n  submit = (order, index, allOrders) => {\n    History.goTo(\"/review-order\", {order, index, allOrders} )\n  }\n\n  prepareViewData = (allItems) => {\n    let index = 0;\n    let data = allItems.map(oneItem => {\n      let hour = new Date(parseInt(oneItem.date + \"000\")).toLocaleString();\n      hour = hour.split(\", \")?.[1];\n      let ind = index++;\n      let obj = {\n        name: <TextWrapper title={oneItem.name} />,\n        phone: <TextWrapper title={oneItem.phone} />,\n        address: <TextWrapper title={oneItem.address} />,\n        buttons: <button className=\"btn btn-primary\" onClick={() => this.submit(oneItem, ind, allItems)} >🔍</button>,\n        hour: <TextWrapper title={hour} />,\n      }\n      return { ...obj };\n    });\n    return data\n  }\n\n  render() {\n    let data = this.prepareViewData(this.state?.orders || [])\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Клиент\",\n            accessor: \"name\"\n          },\n          {\n            Header: \"Адрес\",\n            accessor: \"address\"\n          },\n          {\n            Header: \"Телефон\",\n            accessor: \"phone\",\n            maxWidth: 140\n          },\n          {\n            Header: \"Час\",\n            accessor: \"hour\",\n            maxWidth: 90,\n          },\n          {\n            Header: \"\",\n            accessor: \"buttons\",\n            maxWidth: 60,\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <br />\n        <ReactTable className=\"-striped -highlight\"\n          data={data}\n          columns={present}\n          sortable={false}\n          defaultPageSize={data.length}\n          pageSize={data.length}\n        />\n      </div>\n    )\n  }\n}\n\nexport default SelectOrders;","\nimport React from 'react';\nimport \"react-table/react-table.css\"\nimport Const from '../services/Constants';\nimport AjaxService from '../services/AjaxService';\nimport DataAccessService from '../services/DataAccessService';\nimport { SetStateInput, NavLinkButton } from '../parts/TinyParts';\nimport History from '../services/RouteHistoryProvider';\n\nclass OrderDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDisabled: false\n    };\n  }\n\n  handleSubmit = () => {\n    let st = this.state;\n    if (!st.name || !st.email || !st.address || !st.phone) {\n      window.alert(\"Задължителни полета: Име, email, адрес, телефон!\");\n      return;\n    }\n\n    let confirm = window.confirm(\"Моля, потвърдете поръчката!\");\n    if (!confirm) {\n      return;\n    }\n    let allItems = DataAccessService.getCurrentOrder();\n    let arr = [];\n\n    Object.keys(allItems)\n      .forEach((key) => {\n        arr.push(allItems[key])\n      });\n\n    arr = arr\n      .filter(one => { return one.quantity !== 0 })\n      .map(one => {\n        return {\n          quantity: one.quantity,\n          price: one.orderedItem.price,\n          id: one.orderedItem.id\n        };\n      });\n\n    let data = {\n      name: this.state.name,\n      email: this.state.email,\n      address: this.state.address,\n      phone: this.state.phone,\n      more: this.state.more,\n      order: arr\n    };\n\n    this.setState({ isDisabled: true });\n    let promise = AjaxService.doPost(Const.URLS.ORDER, data, true);\n    promise.then((data) => {\n      History.goTo(\"/order-result\", { \"result\": \"Поръчка номер: \" + data.data + \" беше приета.\" });\n    }).catch((e) => {\n      this.setState({ isDisabled: false });\n      History.goTo(\"/error\", e);\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"text-left text-wrap\">\n        <label>Детайли за доставката:</label>\n        <br />\n        <p />\n        <br />\n        <div className=\"text-left text-wrap\">\n          <SetStateInput stateFieldName=\"name\" statefulObject={this} label=\"Имe\" />\n          <div className=\"row\">\n            <div className=\"col\">\n              <SetStateInput stateFieldName=\"phone\" statefulObject={this} label=\"Телефон\" type=\"tel\" />\n            </div>\n            <div className=\"col\">\n              <SetStateInput stateFieldName=\"email\" statefulObject={this} label=\"e-mail\" type=\"email\" />\n            </div>\n          </div>\n          <SetStateInput stateFieldName=\"address\" statefulObject={this} label=\"Aдрес за доставка\" />\n          <SetStateInput stateFieldName=\"more\" statefulObject={this} label=\"Още насоки\" />\n          <br />\n          <div className=\"text-center\">\n            <div className=\" btn-group \">\n              <NavLinkButton to=\"/basket\" label=\"Обратно\" />\n              <div>\n                <button type=\"submit\" className=\"btn btn-primary ml-1\" disabled={this.state.isDisabled} onClick={this.handleSubmit}>Поръчай!</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default OrderDetails;","import React from 'react';\nimport \"react-table/react-table.css\"\nimport DataAccessService from '../services/DataAccessService';\nimport History from '../services/RouteHistoryProvider';\n\nclass OrderResult extends React.Component {\n  constructor(props) {\n    super(props);\n    this.result = props?.location?.state?.result || \"Unknown result...\"\n  }\n\n  submit = () => {\n    DataAccessService.clearCurrentOrder();\n    History.goTo(\"/items\");\n  }\n\n  render() {\n    return (\n      <div className=\"text-center\">\n        <br />\n        <h5> {this.result}</h5>\n        <p />\n        <br />\n        <button className=\"btn btn-primary\" onClick={this.submit} >Друга поръчка?</button>\n      </div>\n    )\n  }\n}\n\nexport default OrderResult;","import React from \"react\";\n\nimport { NavLinkButton } from \"./TinyParts\";\nimport { withRouter } from 'react-router-dom';\nimport DataAccessService from \"../services/DataAccessService\";\n\nclass TopHeader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    let isPristine = DataAccessService.isPristine();\n    let isAdmin = DataAccessService.getIsAdmin();\n    return (\n      <nav>\n        <div className=\"text-center\">\n          <div className=\"btn-group\">\n            {!isPristine ? (<NavLinkButton to=\"/items\" label=\"Каталог\" />) : null}\n            {!isPristine ? (<NavLinkButton to=\"/basket\" label=\"Кошница\" />) : null}\n            {!isPristine ? (<NavLinkButton to=\"/faq\" label=\"Информация\" />) : null}\n            {isAdmin ? (<NavLinkButton to=\"/edit-items-list\" label=\"Промяна\" />) : null}\n            {isAdmin ? (<NavLinkButton to=\"/get-orders\" label=\"Поръчки\" />) : null}\n          </div>\n        </div>\n        <br />\n      </nav>\n    );\n  }\n}\n\nexport default withRouter(TopHeader);","import React from 'react';\nimport Authenticate from './admin/Authenticate';\nimport Basket from './customer/Basket';\nimport EditItem from './admin/EditItem';\nimport EditItemsList from './admin/EditItemsList';\nimport ErrorPage from './parts/ErrorPage';\nimport Faq from './customer/Faq';\nimport GetOrders from './admin/GetOrders';\nimport HistoryHolder from './services/RouteHistoryProvider';\nimport Home from './Home';\nimport ItemsList from './customer/ItemsList';\nimport ReviewOrder from './admin/ReviewOrder';\nimport SelectOrders from './admin/SelectOrders';\nimport OrderDetails from './customer/OrderDetails';\nimport OrderResult from './customer/OrderResult';\nimport TopHeader from './parts/TopHeader';\nimport {RouteHistoryProvider} from './services/RouteHistoryProvider';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\nconst App = () => {\n  return (\n    <div className=\"container\" style={{ paddingTop: 10 }}>\n\n      <Router>\n        <TopHeader />\n        <RouteHistoryProvider historyHolder={HistoryHolder} />\n        <Switch>\n          < Route exact path=\"/\" component={Home} />\n          < Route exact path=\"/basket\" component={Basket} />\n          < Route path=\"/get-orders\" component={GetOrders} />\n          < Route path=\"/select-orders\" component={SelectOrders} />\n          < Route path=\"/review-order\" component={ReviewOrder} />\n          < Route path=\"/items\" component={ItemsList} />\n          < Route path=\"/faq\" component={Faq} />\n          < Route path=\"/order-details\" component={OrderDetails} />\n          < Route path=\"/order-result\" component={OrderResult} />\n          < Route path=\"/auth\" component={Authenticate} />\n          < Route path=\"/edit-items-list\" component={EditItemsList} />\n          < Route path=\"/edit-item\" component={EditItem} />\n          < Route path=\"/error\" component={ErrorPage} />\n          < Route path=\"*\" component={Home} />\n        </Switch>\n      </Router>\n    </div >\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render( <App/> , document.getElementById('root'));\n\nserviceWorker.unregister();\n","//let ipAdress = 'http://localhost:5000/';\nlet ipAdress = 'https://nut-store.herokuapp.com/';\n\nconst Const = {\n  URLS: {\n    AUTH: ipAdress + \"auth\",\n    BASE_URL: ipAdress,\n    ITEMS:  ipAdress + \"items\",\n    ORDER:  ipAdress + \"order\",\n    ORDERS:  ipAdress + \"orders/\",\n    WAKE_SERVER: ipAdress + \"status\"\n  },\n  AUTH_HEADER_NAME: 'authsecret',\n  VERSION: '1.05'\n};\n\nexport default Const;\n"],"sourceRoot":""}