{"version":3,"sources":["services/Constants.js","services/AjaxService.js","admin/Authenticate.js","parts/TinyParts.js","services/DataAccessService.js","Home.js","services/RouteHistoryProvider.js","customer/ItemsList.js","services/MathUtils.js","customer/Basket.js","parts/TopHeader.js","customer/Faq.js","customer/OrderDetails.js","customer/OrderResult.js","App.js","serviceWorker.js","index.js"],"names":["ipAdress","Const","URLS","BASE_URL","ORDER","AUTH","AUTH_HEADER_NAME","VERSION","AjaxService","execute","method","url","data","headers","axios","JSON","stringify","replace","doPost","getHeaders","doPut","doGet","doDelete","React","Component","Authenticate","props","handleSubmit","encodedString","Buffer","from","state","name","pass","toString","then","console","log","catch","e","error","onChangeFunc","key","setState","target","value","className","onChange","ev","type","placeholder","onClick","this","TextWrapper","args","title","NavLinkButton","exact","activeClassName","to","label","OrderWrapper","orderedItem","wholeOrder","initialValue","min","getCurrentOrder","currentOrder","clearCurrentOrder","isPristine","isSitePristine","setPristine","getPriceList","id","unit","price","info","Home","DataAccessService","RouteHistoryProviderCl","history","historyHolder","importHistory","RouteHistoryProvider","withRouter","historyObj","goTo","push","pathname","ItemsList","submit","History","newOrder","quantity","parseInt","orderWrapperProps","item","prepareViewData","allItems","map","oneItem","obj","order","columns","Header","accessor","width","sortable","defaultPageSize","length","pageSize","showPagination","zeros","flToInt","floatVal1","precision","str","arr","split","decimalNum","substring","zeroFill","intToFl","intV","decimalPart","wholePart","parseFloat","Basket","text","beanId","allFr","Object","keys","forEach","totalPrice","filter","one","currentSum","TopHeader","Faq","getData","question","answer","OrderDetails","email","address","phone","more","set","OrderResult","result","location","App","style","paddingTop","HistoryHolder","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d7aa116.chunk.js","sourcesContent":["let ipAdress = 'http://localhost:5000/';\n\nconst Const = {\n  URLS: {\n    BASE_URL: ipAdress,\n    ORDER:  ipAdress + \"order\",\n    AUTH: ipAdress + \"auth\"\n  },\n  AUTH_HEADER_NAME: 'authsecret',\n  VERSION: '0.10'\n}\n\nexport default Const;\n","import React from 'react';\nimport axios from 'axios';\nimport Const from './Constants';\n\nclass AjaxService extends React.Component {\n\n  execute = (method, url, data, headers) => {\n\n    return axios({\n      method: method,\n      url: url,\n      data: {\"json\": JSON.stringify( data).replace(\"{\", \"\")},\n      headers: headers\n    });\n  };\n\n  doPost = (url, data, headers) => {\n    return this.execute('post', url, data, this.getHeaders(headers));\n  };\n\n  doPut = (url, data, headers) => {\n    return this.execute('put', url, data, this.getHeaders(headers));\n  };\n\n  doGet = (url, headers) => {\n    return this.execute('get', url, {}, this.getHeaders(headers));\n  };\n\n  doDelete = (url, headers) => {\n    return this.execute('delete', url, {}, this.getHeaders(headers));\n  };\n\n  getHeaders = (headers) => {\n    let authHeaderName = Const.AUTH_HEADER_NAME;\n\n    if (!headers) {\n      headers = {};\n    }\n    headers[\"Content-Type\"] = \"application/json;charset=utf-8\"\n\n    return headers;\n  };\n}\n\nexport default new AjaxService();\n","import React from 'react';\nimport \"react-table/react-table.css\"\nimport Const from '../services/Constants';\nimport AjaxService from '../services/AjaxService';\n\nclass Authenticate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  handleSubmit = () => {\n\n\nconst encodedString = Buffer.from(this.state.name + \":\" + this.state.pass).toString('base64');\n\n    let promise = AjaxService.doPost(Const.URLS.AUTH, encodedString, {});\n\n    promise.then((data) => {\n      console.log(data);\n\n    }).catch((e) => {\n\n       console.error(e);\n    })\n  }\n\n  onChangeFunc = (e, key) => {\n    this.setState( {[key]: e.target.value} )\n  }\n\n  render() {\n    return (\n      <div className=\"text-left text-wrap\">\n        <br />\n        <div className=\"text-left text-wrap\">\n           <input className=\"form-control\" onChange={(ev) => this.onChangeFunc(ev, \"name\" )} type=\"text\" placeholder=\"Имe...\"></input>\n          <input className=\"form-control\" onChange={(ev) => this.onChangeFunc(ev, \"pass\" )} type=\"password\" placeholder=\"Парола...\"></input>\n          <br />\n          <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleSubmit}>go!</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Authenticate;\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const TextWrapper = (args) => {\r\n  return (\r\n    <div className=\"text-left text-wrap\">\r\n      <label>{args.title}</label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const NavLinkButton = (props) => (\r\n  <div>\r\n    <NavLink exact activeClassName=\"active\" to={props.to}>\r\n      <button type=\"button\" className=\"btn btn-primary\">\r\n        {props.label}\r\n      </button>\r\n    </NavLink>\r\n  </div>\r\n)\r\n\r\nexport const OrderWrapper = (args) => {\r\n  //\r\n  let { orderedItem, wholeOrder, onChangeFunc, initialValue } = args\r\n  return (\r\n    <div className=\"text-center text-wrap\">\r\n      <input className=\"form-control\" onChange={(ev) => onChangeFunc(ev, orderedItem, wholeOrder)} value={initialValue} type=\"number\" min=\"0\"></input>\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport Const from './Constants';\nimport AjaxService from './AjaxService';\n\n\nclass DataKeeperService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n    this.currentOrder = {};\n    this.isSitePristine = true;\n  };\n\n  getCurrentOrder = () => {\n    return this.currentOrder;\n  }\n\n  clearCurrentOrder = () => {\n    this.currentOrder = {};\n  }\n\n  isPristine = () => {\n    return this.isSitePristine;\n  }\n  setPristine = (isPristine) => {\n    this.isSitePristine = isPristine;\n  }\n  getPriceList = () => {\n    return [\n      {\n        title: \"тиквени семки\",\n        id: \"boiko01\",\n        unit: \"кг\",\n        price: 5.25,\n        info: \"тиквени семки oт банкянска тиква\"\n      },\n      {\n        title: \"фъстъци\",\n        id: \"peanuts01\",\n        unit: \"кг\",\n        price: 1.05,\n        info: \"фъстъци едри\"\n      },\n      {\n        title: \"фурми\",\n        id: \"furmi01\",\n        unit: \"кг\",\n        price: 18.05,\n        info: \"фурми мноо яки\"\n      },\n      {\n        title: \"авокадо\",\n        id: \"avokado01\",\n        unit: \"бр\",\n        price: 4.00,\n        info: \"авокадо\"\n      },\n      {\n        title: \"kруша\",\n        id: \"круша01\",\n        unit: \"бр\",\n        price: 2.3,\n        info: \"сладка kруша\"\n      },\n      {\n        title: \"желатин\",\n        id: \"желатин01\",\n        unit: \"бр\",\n        price: 0.09,\n        info: \"желатин 1\"\n      },\n      {\n        title: \"захар\",\n        id: \"захар01\",\n        unit: \"бр\",\n        price: 0.1,\n        info: \"захар 1\"\n      }\n    ];\n  }\n\n}\nexport default new DataKeeperService();\n\n\n","import React, { Component } from 'react';\nimport { NavLinkButton } from \"./parts/TinyParts\";\nimport DataAccessService from './services/DataAccessService';\n\nclass Home extends Component {\n\n  onClick = () => {\n    DataAccessService.setPristine(false);\n  }\n\n  render() {\n    return (\n        <div className=\"text-center\">\n          <p />\n          <br />\n          <h2>Добре дошли!</h2>\n          <p />\n          <br />\n          <h5>За поръчка на ядки, моля, разгледайте каталога!</h5>\n          <p />\n          <div onClick={this.onClick}>\n            <NavLinkButton to=\"/items\" label=\"Каталог\" />\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom'\n\nclass RouteHistoryProviderCl extends React.Component {\n  constructor(props) {\n    super(props);\n    let { history, historyHolder } = props;\n    if (!!history && !!historyHolder) {\n      historyHolder.importHistory(history)\n    } else {\n      console.error(\"Those objects should NOT be null \" + history + historyHolder);\n    }\n  }\n\n  render() { return null }\n}\n\nexport const RouteHistoryProvider = withRouter(RouteHistoryProviderCl);\n\n////////////\n\nclass History extends React.Component {\n\n  importHistory = (historyObj) => {\n    if (!!historyObj) {\n      this.history = historyObj\n    } else {\n      console.error(\"One object CANNOT be null: \" + historyObj);\n    }\n  }\n\n  goTo = (url, data) => {\n    if (!this.history) {\n      console.error(\"The object should NOT be null: \" + this.history);\n      return;\n    }\n\n    this.history.push({\n      pathname: url,\n      state: data\n    })\n  }\n\n}\n\nexport default new History()","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport { withRouter } from 'react-router-dom'\nimport { TextWrapper, OrderWrapper } from '../parts/TinyParts'\nimport DataAccessService from '../services/DataAccessService';\nimport History from '../services/RouteHistoryProvider';\n\nclass ItemsList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentOrder: DataAccessService.getCurrentOrder()\n    };\n  }\n\n  submit = () => {\n    History.goTo(\"/basket\")\n  }\n\n  onChangeFunc = (e, orderedItem, currentOrder) => {\n    let q = parseInt(e.target.value)\n    let newOrder = {\n      quantity: q,\n      orderedItem: orderedItem\n    }\n    currentOrder[orderedItem.id] = newOrder\n    this.setState({ currentOrder: currentOrder })\n  }\n\n  orderWrapperProps = (item) => {\n    return {\n      orderedItem: item,\n      wholeOrder: this.state.currentOrder,\n      onChangeFunc: this.onChangeFunc,\n      initialValue: this.state.currentOrder[item.id]?.quantity || \"\"\n    }\n  }\n\n  prepareViewData = (allItems) => {\n    let data = allItems.map(oneItem => {\n      let obj = {\n        title: <TextWrapper title={oneItem.title} />,\n        unit: <TextWrapper title={oneItem.unit} />,\n        price: <TextWrapper title={oneItem.price + \" лв/\" + oneItem.unit} />,\n        order: <OrderWrapper {...this.orderWrapperProps(oneItem)} />\n      }\n      return { ...obj };\n    });\n    return data\n  }\n\n  render() {\n    let allItems = DataAccessService.getPriceList();\n\n    let data = this.prepareViewData(allItems)\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Артикул\",\n            accessor: \"title\"\n          },\n          {\n            Header: \"Цена\",\n            accessor: \"price\",\n            width: 100\n          },\n          {\n            Header: \"К-во\",\n            accessor: \"order\",\n            width: 220,\n          }, {\n            Header: \"Мярка\",\n            accessor: \"unit\",\n            width: 100\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={data}\n            columns={present}\n            sortable={false}\n            defaultPageSize={data.length}\n            pageSize={data.length}\n            showPagination={false}\n\n          />\n          <br />\n        </div>\n        <div className=\"text-center\">\n          <button className=\"btn btn-primary\" onClick={this.submit} >Напред</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ItemsList);","\n//import React from 'react';\n\nconst zeros = \"000000000000000000000\";\n\nexport function flToInt(floatVal1, precision) {\n  let str = \"\" + floatVal1;\n  str = zeroFill(str, precision).replace(\".\", \"\");\n  return parseInt(str);\n}\n\nexport function intToFl(intV, precision) {\n  let str = zeros + intV;\n  let decimalPart = str.substring(str.length - precision);\n  let wholePart = str.substring(0, str.length - decimalPart.length);\n\n  return parseFloat(wholePart + \".\" + decimalPart);\n}\n\nexport function add(floatVal1, floatVal2) {\n  let int1 = flToInt(floatVal1);\n  let int2 = flToInt(floatVal2);\n  return intToFl(int1 + int2, 2)\n}\n\nexport function zeroFill(str, precision) {\n  let arr = str.split(\".\");\n  let decimalNum = (arr[1] || zeros) + zeros;\n\n  return arr[0] + decimalNum.substring(0, precision);\n}\n","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport { withRouter } from 'react-router-dom'\nimport { TextWrapper } from '../parts/TinyParts'\nimport DataAccessService from '../services/DataAccessService';\nimport { NavLinkButton } from '../parts/TinyParts';\nimport { intToFl, flToInt } from '../services/MathUtils'\n\nclass Basket extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      beanId: props.beanId,\n      allFr: [],\n      currentOrder: DataAccessService.getCurrentOrder()\n    };\n  }\n\n  text = (text) => {\n    return (<TextWrapper title={text} />)\n  }\n\n  render() {\n\n    let allItems = DataAccessService.getCurrentOrder();\n    let arr = [];\n\n    //object to array:\n    Object.keys(allItems)\n      .forEach((key) => {\n        arr.push(allItems[key])\n      });\n\n    let totalPrice = 0;\n\n    arr = arr\n      .filter(one => { return one.quantity !== 0 })\n      .map(one => {\n        let quantity = one.quantity;\n        one = one.orderedItem;\n        let currentSum = quantity * flToInt(one.price, 2);\n        totalPrice = totalPrice + currentSum;\n\n        let obj = {\n          title: this.text(one.title),\n          quantity: this.text(quantity + \" \" + one.unit),\n          price: this.text(one.price + \" лв/\" + one.unit),\n          order: this.text(intToFl(currentSum, 2) + \" лв\"),\n        }\n        return { ...obj };\n      });\n\n    arr.push({\n      title: this.text(\"Общо за поръчка\"),\n      quantity: this.text(\"\"),\n      price: this.text(\"\"),\n      order: this.text(intToFl(totalPrice, 2) + \" лв\")\n    })\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Артикул\",\n            accessor: \"title\"\n          },\n          {\n            Header: \"Цена\",\n            accessor: \"price\",\n            width: 100\n          },\n          {\n            Header: \"К-во\",\n            accessor: \"quantity\",\n            width: 100\n          },\n          {\n            Header: \"Общо\",\n            accessor: \"order\",\n            width: 220,\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={arr}\n            columns={present}\n            sortable={false}\n            defaultPageSize={arr.length}\n            pageSize={arr.length}\n            showPagination={false}\n          />\n          <br />\n        </div>\n        <div className=\"text-center\">\n          <div className=\" btn-group \">\n            <NavLinkButton to=\"/items\" label=\"Назад\" />\n            <NavLinkButton to=\"/order-details\" label=\"Напред\" />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Basket);\n","import React from \"react\";\n\nimport { NavLinkButton } from \"./TinyParts\";\nimport { withRouter } from 'react-router-dom';\nimport DataAccessService from \"../services/DataAccessService\";\n\nclass TopHeader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    let isPristine = DataAccessService.isPristine();\n    return (\n      <nav>\n        <div className=\"text-center\">\n          <div className=\"btn-group\">\n           { !isPristine ? (<NavLinkButton to=\"/items\" label=\"Каталог\" />) : null } \n           { !isPristine ? (<NavLinkButton to=\"/basket\" label=\"Кошница\" />) : null } \n           { !isPristine ? (<NavLinkButton to=\"/faq\" label=\"Информация\" />) : null } \n          </div>\n        </div>\n        <br/>\n      </nav>\n    );\n  }\n}\n\nexport default withRouter(TopHeader);","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport { TextWrapper } from '../parts/TinyParts'\nimport History from '../services/RouteHistoryProvider';\n\nclass Faq extends React.Component {\n\n  submit = () => {\n    History.goTo(\"/auth\");\n  }\n\n  getData = () => {\n    return [{\n      question: \"какви са контактите Ви?\",\n      answer: \"........\"\n    },\n    {\n      question: \"Как става поръчката...\",\n      answer: \"става...\"\n    },\n    {\n      question: \"Има ли цена за доставка\",\n      answer: \"за доставки над 100 лв транспортът е безплатен\"\n    }]\n  }\n\n  prepareViewData = (allItems) => {\n    let data = allItems.map(one => {\n      let obj = {\n        question: <TextWrapper title={one.question} />,\n        answer: <TextWrapper title={one.answer} />\n      }\n      return { ...obj };\n    });\n    return data\n  }\n\n  render() {\n    let allItems = this.getData();\n\n    let data = this.prepareViewData(allItems)\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Въпроси\",\n            accessor: \"question\",\n            width: 250\n          },\n          {\n            Header: \"Отговори\",\n            accessor: \"answer\"\n          }   \n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={data}\n            columns={present}\n            sortable={false}\n            defaultPageSize={data.length}\n            pageSize={data.length}\n            showPagination={false}\n          />\n          <br />\n        </div>\n        <button className=\"btn btn-primary\" onClick={this.submit} >Admin</button>\n      </div>\n    )\n  }\n}\n\nexport default Faq;","\nimport React from 'react';\nimport \"react-table/react-table.css\"\nimport Const from '../services/Constants';\nimport AjaxService from '../services/AjaxService';\nimport DataAccessService from '../services/DataAccessService';\nimport History from '../services/RouteHistoryProvider';\n\nclass OrderDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleSubmit = () => {\n    let allItems = DataAccessService.getCurrentOrder();\n    let arr = [];\n\n    Object.keys(allItems)\n      .forEach((key) => {\n        arr.push(allItems[key])\n      });\n\n    arr = arr\n      .filter(one => { return one.quantity !== 0 })\n      .map(one => {\n        return {\n          quantity: one.quantity,\n          price: one.orderedItem.price,\n          id: one.orderedItem.id\n        }\n      });\n\n    let data = {\n      name: this.state.name,\n      email: this.state.email,\n      address: this.state.address,\n      phone: this.state.phone,\n      more: this.state.more,\n      order: arr\n    }\n\n    let promise = AjaxService.doPost(Const.URLS.ORDER, data, {});\n\n    promise.then((data) => {\n      console.log(data);\n      History.goTo(\"/order-result\", { \"result\": \"Поръчката беше успешна. поръчка номер..\" })\n    }).catch((e) => {\n\n      console.error(e);\n    })\n  }\n\n  set = (e, key) => {\n    this.setState({ [key]: e.target.value })\n  }\n\n  render() {\n    return (\n      <div className=\"text-left text-wrap\">\n        <br />\n        <div className=\"text-left text-wrap\">\n          <input className=\"form-control mb-3\" onChange={e => this.set(e, \"name\")} placeholder=\"Имe...\"></input>\n          <input className=\"form-control mb-3\" onChange={e => this.set(e, \"email\")} placeholder=\"email...\"></input>\n          <input className=\"form-control mb-3\" onChange={e => this.set(e, \"phone\")} placeholder=\"телефон...\"></input>\n          <input className=\"form-control mb-3\" onChange={e => this.set(e, \"address\")} placeholder=\"Aдрес на доставка...\"></input>\n          <input className=\"form-control mb-3\" onChange={e => this.set(e, \"more\")} placeholder=\"допълнителна информация...\"></input>\n          <br />\n          <div className=\"text-center\">\n            <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleSubmit}>Поръчай!</button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default OrderDetails;","import React from 'react';\nimport \"react-table/react-table.css\"\nimport DataAccessService from '../services/DataAccessService';\nimport History from '../services/RouteHistoryProvider';\n\nclass OrderResult extends React.Component {\n  constructor(props) {\n    super(props);\n    this.result = props?.location?.state?.result || \"Unknown result...\"\n  }\n\n  submit = () => {\n    DataAccessService.clearCurrentOrder();\n    History.goTo(\"/items\");\n  }\n\n  render() {\n    return (\n      <div className=\"text-center\">\n        <br />\n        <h5> {this.result}</h5>\n        <p />\n        <br />\n        <button className=\"btn btn-primary\" onClick={this.submit} >Друга поръчка?</button>\n      </div>\n    )\n  }\n}\n\nexport default OrderResult;","import React from 'react';\nimport Home from './Home';\nimport ItemsList from './customer/ItemsList';\nimport Basket from './customer/Basket';\nimport TopHeader from './parts/TopHeader';\nimport Faq from './customer/Faq';\nimport OrderDetails from './customer/OrderDetails';\nimport Authenticate from './admin/Authenticate';\nimport HistoryHolder from './services/RouteHistoryProvider';\nimport OrderResult from './customer/OrderResult';\nimport {RouteHistoryProvider} from './services/RouteHistoryProvider';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\nconst App = () => {\n  return (\n    <div className=\"container\" style={{ paddingTop: 10 }}>\n\n      <Router>\n        <TopHeader />\n        <RouteHistoryProvider historyHolder={HistoryHolder} />\n        <Switch>\n          < Route exact path=\"/\" component={Home} />\n          < Route exact path=\"/basket\" component={Basket} />\n          < Route path=\"/items\" component={ItemsList} />\n          < Route path=\"/faq\" component={Faq} />\n          < Route path=\"/order-details\" component={OrderDetails} />\n          < Route path=\"/order-result\" component={OrderResult} />\n          < Route path=\"/auth\" component={Authenticate} />\n          < Route path=\"*\" component={Home} />\n        </Switch>\n      </Router>\n    </div >\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render( <App/> , document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}